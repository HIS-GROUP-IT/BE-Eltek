{"version":3,"sources":["../../../src/interfaces/employee/IEmployeeService.ts"],"sourcesContent":["import { IEmployee } from \"@/types/employee.types\";\r\nimport { IProject } from \"@/types/project.types\";\r\nimport { Token } from \"typedi\";\r\n\r\nexport interface IEmployeeService {\r\n  createEmployee(employee: IEmployee): Promise<IEmployee>;\r\n  updateEmployee(employee: any): Promise<IEmployee>;\r\n  deleteEmployee(id: number): Promise<void>;\r\n  getEmployeeById(id: number): Promise<IEmployee>;\r\n  getAllEmployees(): Promise<IEmployee[]>;\r\n  assignEmployeesToProject(\r\n    employeeIds: number[],\r\n    projectId: number\r\n  ): Promise<void>;\r\n  getEmployeesByProjectId(projectId: number): Promise<IEmployee[]>;\r\n  getEmployeeProjects(employeeId: number): Promise<IProject[]>;\r\n}\r\n\r\nexport const EMPLOYEE_SERVICE_TOKEN = new Token<IEmployeeService>(\r\n  \"IEmployeeService\"\r\n);\r\n"],"names":["EMPLOYEE_SERVICE_TOKEN","Token"],"mappings":";;;;+BAkBaA;;;eAAAA;;;wBAhBS;AAgBf,MAAMA,yBAAyB,IAAIC,aAAK,CAC7C"}