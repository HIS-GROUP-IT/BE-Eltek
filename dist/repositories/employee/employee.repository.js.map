{"version":3,"sources":["../../../src/repositories/employee/employee.repository.ts"],"sourcesContent":["import { HttpException } from \"@/exceptions/HttpException\";\r\nimport { IEmployeeRepository } from \"@/interfaces/employee/IEmployeeRepository.interface\";\r\nimport Employee from \"@/models/employee/employee.model\";\r\nimport Project from \"@/models/project/project.model\";\r\nimport { IEmployee } from \"@/types/employee.types\";\r\nimport { Service } from \"typedi\";\r\n\r\n@Service()  \r\nexport class EmployeeRepository implements IEmployeeRepository {\r\n    public async createEmployee(employeeData: Partial<IEmployee>): Promise<IEmployee> {\r\n        const employee = await Employee.create(employeeData);\r\n        return employee.get({ plain: true });\r\n    }\r\n\r\n    public async updateEmployee(employeeData: Partial<IEmployee>): Promise<IEmployee> {\r\n        const employee = await Employee.findByPk(employeeData.id);\r\n        if (!employee) throw new Error(\"Employee not found\");\r\n        await employee.update(employeeData);\r\n        return employee.get({ plain: true });\r\n    }\r\n\r\n    public async deleteEmployee(employeeId: number): Promise<void> {\r\n        const employee = await Employee.findByPk(employeeId);\r\n        if (!employee) throw new Error(\"Employee not found\");\r\n        await employee.destroy();\r\n    }\r\n\r\n    public async getAllEmployees(): Promise<IEmployee[]> {\r\n        const employees = await Employee.findAll({\r\n            order: [['createdAt', 'DESC']],\r\n            raw: true\r\n        });\r\n        return employees;\r\n    }\r\n\r\n    public async getEmployeeById(employeeId: number): Promise<IEmployee | null> {\r\n        const employee = await Employee.findByPk(employeeId, { raw: true });\r\n        return employee;\r\n    }\r\n\r\n public async assignEmployeesToProject(employeeIds: number[], projectId: number): Promise<void> {\r\n    const project = await Project.findByPk(projectId);\r\n    if (!project) throw new HttpException(404, \"Project not found\");\r\n\r\n    const employees = await Employee.findAll({ where: { id: employeeIds } });\r\n    if (employees.length === 0) throw new HttpException(404, \"No employees found\");\r\n\r\n    const foundIds = employees.map(emp => emp.id);\r\n    const missingIds = employeeIds.filter(id => !foundIds.includes(id));\r\n    if (missingIds.length > 0) {\r\n        throw new HttpException(404, `Employees not found: ${missingIds.join(', ')}`);\r\n    }\r\n\r\n    await Promise.all(\r\n        employees.map(employee => employee.addProjects([project])) \r\n    );\r\n}\r\n\r\npublic async getEmployeesByProjectId(projectId: number): Promise<Employee[]> {\r\n    const project = await Project.findByPk(projectId, {\r\n      include: [{\r\n        model: Employee,\r\n        as: 'employees', \r\n        through: { attributes: [] }, \r\n      }],\r\n      raw:true\r\n    });\r\n  \r\n    if (!project) {\r\n      throw new HttpException(404, \"Project not found\");\r\n    }\r\n      const employees = project.employees;\r\n  \r\n    if (!employees || employees.length === 0) {\r\n      throw new HttpException(404, \"No employees assigned to this project\");\r\n    }\r\n  \r\n    return employees;\r\n  }\r\n\r\npublic async getEmployeeProjects(employeeId: number): Promise<Project[]> {\r\n    const employee = await Employee.findByPk(employeeId, {\r\n      include: [{\r\n        model: Project,\r\n        as: 'projects',\r\n        through: { attributes: [] }, \r\n      }],\r\n      raw:true\r\n    });\r\n  \r\n    if (!employee) {\r\n      throw new HttpException(404, \"Employee not found\");\r\n    }\r\n  \r\n    const projects = employee.projects;\r\n  \r\n    if (!projects || projects.length === 0) {\r\n      throw new HttpException(404, \"No projects assigned to this employee\");\r\n    }\r\n  \r\n    return projects;\r\n  }\r\n}\r\n"],"names":["EmployeeRepository","createEmployee","employeeData","employee","Employee","create","get","plain","updateEmployee","findByPk","id","Error","update","deleteEmployee","employeeId","destroy","getAllEmployees","employees","findAll","order","raw","getEmployeeById","assignEmployeesToProject","employeeIds","projectId","project","Project","HttpException","where","length","foundIds","map","emp","missingIds","filter","includes","join","Promise","all","addProjects","getEmployeesByProjectId","include","model","as","through","attributes","getEmployeeProjects","projects"],"mappings":"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"}