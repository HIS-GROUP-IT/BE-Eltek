{"version":3,"sources":["../../../src/services/project/timesheet.service.ts"],"sourcesContent":["import { Service } from \"typedi\";\r\nimport { ITimeSheetService, TIMESHEET_SERVICE_TOKEN } from \"@/interfaces/timesheet/ITimeSheetService.interface\";\r\nimport { HttpException } from \"@/exceptions/HttpException\"; // Custom Exception Handling\r\nimport { ITimeSheet } from \"@/types/timesheet.type\";\r\nimport { TimesheetRepository } from \"@/repositories/project/timesheet.repository\";\r\n\r\n@Service({id : TIMESHEET_SERVICE_TOKEN, type: TimesheetService})\r\nexport class TimesheetService implements ITimeSheetService {\r\n    constructor(private timesheetRepository: TimesheetRepository) {}\r\n\r\n    public async createTimesheet(timesheetData: Partial<ITimeSheet>): Promise<ITimeSheet> {\r\n        try {\r\n            return await this.timesheetRepository.createTimesheet(timesheetData);\r\n        } catch (error) {\r\n            throw new HttpException(500, `Error creating timesheet: ${error.message}`);\r\n        }\r\n    }\r\n\r\n    public async updateTimesheet(timesheetData: Partial<ITimeSheet>): Promise<ITimeSheet | null> {\r\n        try {\r\n            return await this.timesheetRepository.updateTimesheet(timesheetData);\r\n        } catch (error) {\r\n            throw new HttpException(500, `Error updating timesheet: ${error.message}`);\r\n        }\r\n    }\r\n\r\n    public async getTimesheetsByUser(userId: number): Promise<ITimeSheet[]> {\r\n        try {\r\n            return await this.timesheetRepository.getTimesheetsByUser(userId);\r\n        } catch (error) {\r\n            throw new HttpException(500, `Error fetching timesheets: ${error.message}`);\r\n        }\r\n    }\r\n\r\n    public async getTimesheetsByProject(projectId: number): Promise<ITimeSheet[]> {\r\n        try {\r\n            return await this.timesheetRepository.getTimesheetsByProject(projectId);\r\n        } catch (error) {\r\n            throw new HttpException(500, `Error fetching timesheets: ${error.message}`);\r\n        }\r\n    }\r\n\r\n    public async getAllTimesheets(): Promise<ITimeSheet[]> {\r\n        try {\r\n            return await this.timesheetRepository.getAllTimesheets();\r\n        } catch (error) {\r\n            throw new HttpException(500, `Error fetching timesheets: ${error.message}`);\r\n        }\r\n    }\r\n\r\n    public async deleteTimesheet(id: number): Promise<void> {\r\n        try {\r\n            await this.timesheetRepository.deleteTimesheet(id);\r\n        } catch (error) {\r\n            throw new HttpException(500, `Error deleting timesheet: ${error.message}`);\r\n        }\r\n    }\r\n    public async getTimesheetById(id: number): Promise<ITimeSheet | null> {\r\n        try {\r\n            return await this.timesheetRepository.getTimesheetById(id);\r\n        } catch (error) {\r\n            throw new HttpException(500, `Error fetching timesheet: ${error.message}`);\r\n        }\r\n    }\r\n\r\n    public async getTimesheetsByDateRange(startDate: Date, endDate: Date): Promise<ITimeSheet[]> {\r\n        try {\r\n            return await this.timesheetRepository.getTimesheetsByDateRange(startDate, endDate);\r\n        } catch (error) {\r\n            throw new HttpException(500, `Error fetching timesheets: ${error.message}`);\r\n        }\r\n    }\r\n\r\n    public async getTimesheetsByUserAndProject(userId: number, projectId: number): Promise<ITimeSheet[]> {\r\n        try {\r\n            return await this.timesheetRepository.getTimesheetsByUserAndProject(userId, projectId);\r\n        } catch (error) {\r\n            throw new HttpException(500, `Error fetching timesheets: ${error.message}`);\r\n        }\r\n    }\r\n\r\n    public async getTotalHoursByUser(userId: number): Promise<number> {\r\n        try {\r\n            return await this.timesheetRepository.getTotalHoursByUser(userId);\r\n        } catch (error) {\r\n            throw new HttpException(500, `Error calculating hours: ${error.message}`);\r\n        }\r\n    }\r\n\r\n    public async getTimesheetSummary(userId: number, startDate: Date, endDate: Date): Promise<{projectId: number, totalHours: number}[]> {\r\n        try {\r\n            return await this.timesheetRepository.getTimesheetSummary(userId, startDate, endDate);\r\n        } catch (error) {\r\n            throw new HttpException(500, `Error generating summary: ${error.message}`);\r\n        }\r\n    }\r\n\r\n    public async approveTimesheet(id: number): Promise<ITimeSheet> {\r\n        try {\r\n            return await this.timesheetRepository.approveTimesheet(id);\r\n        } catch (error) {\r\n            throw new HttpException(500, `Error approving timesheet: ${error.message}`);\r\n        }\r\n    }\r\n\r\n    public async rejectTimesheet(id: number): Promise<ITimeSheet> {\r\n        try {\r\n            return await this.timesheetRepository.rejectTimesheet(id);\r\n        } catch (error) {\r\n            throw new HttpException(500, `Error rejecting timesheet: ${error.message}`);\r\n        }\r\n    }\r\n}\r\n"],"names":["TimesheetService","createTimesheet","timesheetData","timesheetRepository","error","HttpException","message","updateTimesheet","getTimesheetsByUser","userId","getTimesheetsByProject","projectId","getAllTimesheets","deleteTimesheet","id","getTimesheetById","getTimesheetsByDateRange","startDate","endDate","getTimesheetsByUserAndProject","getTotalHoursByUser","getTimesheetSummary","approveTimesheet","rejectTimesheet","constructor","TIMESHEET_SERVICE_TOKEN","type"],"mappings":"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"}