2025-04-19 08:29:04 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 09:10:51 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 09:10:51 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 09:10:55 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 09:12:08 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 09:17:51 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 09:19:29 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 09:22:33 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 09:23:31 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 09:26:20 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 09:28:00 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 09:35:53 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 09:36:01 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 09:37:24 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 09:45:30 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 09:46:39 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 09:47:00 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 09:49:30 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 09:49:46 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 09:49:47 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 09:53:29 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 09:56:23 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 09:58:26 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 09:59:06 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 10:00:04 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 10:00:39 error: [GET] /api/tasks/getTaskByEmployeeAndProject/1/14 >> StatusCode:: 500, Message:: Error fetching tasks: Unknown column 'Task.projectId' in 'where clause'
2025-04-19 10:00:42 error: [GET] /api/tasks/getTaskByEmployeeAndProject/1/14 >> StatusCode:: 500, Message:: Error fetching tasks: Unknown column 'Task.projectId' in 'where clause'
2025-04-19 10:01:07 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 10:01:07 error: [GET] /api/tasks/getTaskByEmployeeAndProject/1/14 >> StatusCode:: 500, Message:: Error fetching tasks: Unknown column 'Task.projectId' in 'where clause'
2025-04-19 10:02:41 error: [POST] /api/tasks/createTask >> StatusCode:: 400, Message:: hours must be a positive number,hours must be an integer number
2025-04-19 10:03:48 error: [POST] /api/tasks/createTask >> StatusCode:: 500, Message:: Error creating task: Cannot add or update a child row: a foreign key constraint fails (`db_aa010d_eltek`.`tasks`, CONSTRAINT `tasks_ibfk_2` FOREIGN KEY (`allocationId`) REFERENCES `allocations` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE)
2025-04-19 10:04:59 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 10:04:59 error: [GET] /api/tasks/getTaskByEmployeeAndProject/1/14 >> StatusCode:: 500, Message:: Error fetching tasks: Unknown column 'Task.projectId' in 'where clause'
2025-04-19 10:05:08 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 10:05:08 error: [GET] /api/tasks/getTaskByEmployeeAndProject/1/14 >> StatusCode:: 500, Message:: Error fetching tasks: Unknown column 'Task.projectId' in 'where clause'
2025-04-19 10:05:18 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 10:05:24 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 10:05:24 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 10:05:41 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 10:05:41 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 10:05:45 error: [GET] /api/tasks/getTaskByEmployeeAndProject/1/14 >> StatusCode:: 500, Message:: Error fetching tasks: Unknown column 'Task.projectId' in 'where clause'
2025-04-19 10:05:45 error: [GET] /api/tasks/getTaskByEmployeeAndProject/1/14 >> StatusCode:: 500, Message:: Error fetching tasks: Unknown column 'Task.projectId' in 'where clause'
2025-04-19 10:13:22 error: uncaughtException: тип Unable to compile TypeScript:
[96msrc/repositories/task/task.repository.ts[0m:[93m262[0m:[93m73[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m262[0m           const projectAllocation = employee.allAllocation.find(a => a. === allocationId);
[7m   [0m [91m                                                                        ~~~[0m

TSError: тип Unable to compile TypeScript:
[96msrc/repositories/task/task.repository.ts[0m:[93m262[0m:[93m73[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m262[0m           const projectAllocation = employee.allAllocation.find(a => a. === allocationId);
[7m   [0m [91m                                                                        ~~~[0m

    at createTSError (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:859:12)
    at reportTSError (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:863:19)
    at C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1379:34
    at Object.compile (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1458:13)
    at Module.m._compile (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1617:30)
    at node:internal/modules/cjs/loader:1689:10
    at Object.require.extensions.<computed> [as .ts] (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1621:12)
    at Module.load (node:internal/modules/cjs/loader:1318:32)
    at Function._load (node:internal/modules/cjs/loader:1128:12)
    at TracingChannel.traceSync (node:diagnostics_channel:315:14)
2025-04-19 10:16:02 error: Unable to connect to the database: connect ETIMEDOUT
2025-04-19 10:16:22 error: Unable to connect to the database: connect ETIMEDOUT
2025-04-19 10:19:35 error: Unable to connect to the database: connect ETIMEDOUT
2025-04-19 10:23:01 error: Unable to connect to the database: connect ETIMEDOUT
2025-04-19 10:26:00 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 10:26:10 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 10:26:10 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 10:27:45 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 10:32:37 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 10:33:15 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 10:36:31 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 10:38:37 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 10:39:03 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 10:56:02 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 10:56:06 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 10:58:33 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:01:07 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:05:49 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:05:50 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:05:54 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:09:07 error: [POST] /api/tasks/createTask >> StatusCode:: 400, Message:: actualHours must be a positive number
2025-04-19 11:09:57 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:09:57 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:11:24 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:13:36 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:13:44 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:15:27 error: [GET] /api/tasks/getTaskByEmployeeAndProject/1/14 >> StatusCode:: 500, Message:: Error fetching tasks: Unknown column 'Task.tastDate' in 'order clause'
2025-04-19 11:15:27 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:15:31 error: [GET] /api/tasks/getTaskByEmployeeAndProject/1/14 >> StatusCode:: 500, Message:: Error fetching tasks: Unknown column 'Task.tastDate' in 'order clause'
2025-04-19 11:15:31 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:15:44 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:15:44 error: [GET] /api/tasks/getTaskByEmployeeAndProject/1/14 >> StatusCode:: 500, Message:: Error fetching tasks: Unknown column 'Task.tastDate' in 'order clause'
2025-04-19 11:16:06 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:16:08 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:16:08 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:16:41 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:19:08 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:19:59 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:19:59 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:19:59 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:19:59 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:22:27 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:22:39 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:24:37 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:24:42 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:25:48 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:29:02 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:29:14 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:32:27 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:38:45 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:39:09 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:39:26 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:40:09 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:40:40 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:42:08 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:42:11 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:42:29 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:43:28 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:44:19 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:46:16 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:46:16 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:46:51 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 11:56:04 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 12:02:46 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 12:09:57 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 12:09:58 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 12:09:59 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 12:10:01 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 12:10:01 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 12:14:50 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 12:15:06 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 12:16:51 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 12:35:42 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 12:35:42 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 12:37:45 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 12:40:01 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 12:42:44 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 12:42:44 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 12:43:02 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 12:48:31 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 12:50:36 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 12:53:10 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 12:59:01 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 12:59:17 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 12:59:49 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 12:59:49 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 13:01:39 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 13:01:40 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 13:03:38 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 13:03:56 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 13:06:24 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 13:06:38 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 13:12:43 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 13:13:49 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 13:14:07 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 13:14:08 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 13:17:18 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 13:53:19 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 13:53:37 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 13:54:56 error: [GET] /api/tasks/getTaskByEmployeeAndProject/1/14 >> StatusCode:: 500, Message:: Error fetching tasks: Unknown column 'phase' in 'field list'
2025-04-19 13:54:56 error: [GET] /api/tasks/getTaskByEmployeeAndProject/1/14 >> StatusCode:: 500, Message:: Error fetching tasks: Unknown column 'phase' in 'field list'
2025-04-19 13:56:27 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:01:44 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:02:51 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:03:07 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:04:12 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:04:20 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:05:05 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:06:08 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:12:21 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:14:00 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:14:19 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:14:19 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:15:18 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:15:51 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:16:44 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:17:52 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:18:30 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:18:43 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:22:52 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:24:26 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:24:44 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:24:44 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:25:52 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:27:37 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:27:49 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 14:27:49 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 14:32:51 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:35:01 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:38:02 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:43:59 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:47:12 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:51:03 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:54:15 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:54:48 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:56:03 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:56:55 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:57:02 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:57:08 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:57:08 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:57:10 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:57:10 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:57:11 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:58:19 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:59:08 error: [DELETE] /api/allocations/deleteAllocation/14 >> StatusCode:: 500, Message:: Cannot delete or update a parent row: a foreign key constraint fails (`db_aa010d_eltek`.`tasks`, CONSTRAINT `tasks_ibfk_2` FOREIGN KEY (`allocationId`) REFERENCES `allocations` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE)
2025-04-19 14:59:26 error: [DELETE] /api/allocations/deleteAllocation/14 >> StatusCode:: 500, Message:: Cannot delete or update a parent row: a foreign key constraint fails (`db_aa010d_eltek`.`tasks`, CONSTRAINT `tasks_ibfk_2` FOREIGN KEY (`allocationId`) REFERENCES `allocations` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE)
2025-04-19 14:59:35 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 14:59:36 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:02:38 error: uncaughtException: Package subpath './types/sequelize' is not defined by "exports" in C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\sequelize\package.json
Error: Package subpath './types/sequelize' is not defined by "exports" in C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\sequelize\package.json
    at exportsNotFound (node:internal/modules/esm/resolve:296:10)
    at packageExportsResolve (node:internal/modules/esm/resolve:638:13)
    at resolveExports (node:internal/modules/cjs/loader:640:36)
    at Function._findPath (node:internal/modules/cjs/loader:748:31)
    at Function.<anonymous> (node:internal/modules/cjs/loader:1235:27)
    at Function.Module._resolveFilename.sharedData.moduleResolveFilenameHook.installedValue (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\@cspotcode\source-map-support\source-map-support.js:811:30)
    at Function.Module._resolveFilename (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\tsconfig-paths\src\register.ts:115:36)
    at Function._load (node:internal/modules/cjs/loader:1075:27)
    at TracingChannel.traceSync (node:diagnostics_channel:315:14)
    at wrapModuleLoad (node:internal/modules/cjs/loader:218:24)
2025-04-19 15:02:45 error: uncaughtException: Package subpath './types/sequelize' is not defined by "exports" in C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\sequelize\package.json
Error: Package subpath './types/sequelize' is not defined by "exports" in C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\sequelize\package.json
    at exportsNotFound (node:internal/modules/esm/resolve:296:10)
    at packageExportsResolve (node:internal/modules/esm/resolve:638:13)
    at resolveExports (node:internal/modules/cjs/loader:640:36)
    at Function._findPath (node:internal/modules/cjs/loader:748:31)
    at Function.<anonymous> (node:internal/modules/cjs/loader:1235:27)
    at Function.Module._resolveFilename.sharedData.moduleResolveFilenameHook.installedValue (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\@cspotcode\source-map-support\source-map-support.js:811:30)
    at Function.Module._resolveFilename (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\tsconfig-paths\src\register.ts:115:36)
    at Function._load (node:internal/modules/cjs/loader:1075:27)
    at TracingChannel.traceSync (node:diagnostics_channel:315:14)
    at wrapModuleLoad (node:internal/modules/cjs/loader:218:24)
2025-04-19 15:04:47 error: uncaughtException: тип Unable to compile TypeScript:
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m83[0m:[93m3[0m - [91merror[0m[90m TS1128: [0mDeclaration or statement expected.

[7m83[0m   public async getEmployeeAllocations(employeeId: number): Promise<Allocation[]> {
[7m  [0m [91m  ~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m83[0m:[93m10[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m83[0m   public async getEmployeeAllocations(employeeId: number): Promise<Allocation[]> {
[7m  [0m [91m         ~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m83[0m:[93m49[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m83[0m   public async getEmployeeAllocations(employeeId: number): Promise<Allocation[]> {
[7m  [0m [91m                                                ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m83[0m:[93m58[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m83[0m   public async getEmployeeAllocations(employeeId: number): Promise<Allocation[]> {
[7m  [0m [91m                                                         ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m83[0m:[93m79[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m83[0m   public async getEmployeeAllocations(employeeId: number): Promise<Allocation[]> {
[7m  [0m [91m                                                                              [0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m84[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m84[0m     return await AllocationModel.findAll({
[7m  [0m [91m           ~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m88[0m:[93m7[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m88[0m     });
[7m  [0m [91m      ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m91[0m:[93m3[0m - [91merror[0m[90m TS1128: [0mDeclaration or statement expected.

[7m91[0m   public async getProjectAllocations(projectId: number): Promise<Allocation[]> {
[7m  [0m [91m  ~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m91[0m:[93m10[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m91[0m   public async getProjectAllocations(projectId: number): Promise<Allocation[]> {
[7m  [0m [91m         ~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m91[0m:[93m47[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m91[0m   public async getProjectAllocations(projectId: number): Promise<Allocation[]> {
[7m  [0m [91m                                              ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m91[0m:[93m56[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m91[0m   public async getProjectAllocations(projectId: number): Promise<Allocation[]> {
[7m  [0m [91m                                                       ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m91[0m:[93m77[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m91[0m   public async getProjectAllocations(projectId: number): Promise<Allocation[]> {
[7m  [0m [91m                                                                            [0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m92[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m92[0m     return await AllocationModel.findAll({
[7m  [0m [91m           ~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m118[0m:[93m7[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m118[0m     });
[7m   [0m [91m      ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m121[0m:[93m3[0m - [91merror[0m[90m TS1128: [0mDeclaration or statement expected.

[7m121[0m   public async findExistingAllocation(
[7m   [0m [91m  ~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m121[0m:[93m10[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m121[0m   public async findExistingAllocation(
[7m   [0m [91m         ~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m122[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m122[0m     employeeId: number,
[7m   [0m [91m              ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m123[0m:[93m14[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m123[0m     projectId: number,
[7m   [0m [91m             ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m124[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m124[0m     phases: string[]
[7m   [0m [91m          ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m124[0m:[93m20[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m124[0m     phases: string[]
[7m   [0m [91m                   [0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m125[0m:[93m4[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m125[0m   ): Promise<Allocation | null> {
[7m   [0m [91m   ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m126[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m126[0m     const normalizedPhases = JSON.stringify([...phases].sort());
[7m   [0m [91m          ~~~~~~~~~~~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m126[0m:[93m64[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m126[0m     const normalizedPhases = JSON.stringify([...phases].sort());
[7m   [0m [91m                                                               ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m128[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m128[0m     return await AllocationModel.findOne({
[7m   [0m [91m           ~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m135[0m:[93m7[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m135[0m     });
[7m   [0m [91m      ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m138[0m:[93m3[0m - [91merror[0m[90m TS1128: [0mDeclaration or statement expected.

[7m138[0m   public async checkForOverlaps(
[7m   [0m [91m  ~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m138[0m:[93m10[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m138[0m   public async checkForOverlaps(
[7m   [0m [91m         ~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m139[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m139[0m     employeeId: number,
[7m   [0m [91m              ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m140[0m:[93m14[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m140[0m     startDate: Date,
[7m   [0m [91m             ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m141[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m141[0m     endDate: Date,
[7m   [0m [91m           ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m142[0m:[93m4[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m142[0m   ): Promise<Allocation[]> {
[7m   [0m [91m   ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m142[0m:[93m25[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m142[0m   ): Promise<Allocation[]> {
[7m   [0m [91m                        [0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m143[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m143[0m     const whereClause: any = {
[7m   [0m [91m          ~~~~~~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m143[0m:[93m22[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m143[0m     const whereClause: any = {
[7m   [0m [91m                     ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m149[0m:[93m6[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m149[0m     };
[7m   [0m [91m     ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m151[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m151[0m     return await AllocationModel.findAll({
[7m   [0m [91m           ~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m154[0m:[93m7[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m154[0m     });
[7m   [0m [91m      ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m157[0m:[93m3[0m - [91merror[0m[90m TS1128: [0mDeclaration or statement expected.

[7m157[0m   public async overrideConflictingAllocations(
[7m   [0m [91m  ~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m157[0m:[93m10[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m157[0m   public async overrideConflictingAllocations(
[7m   [0m [91m         ~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m158[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m158[0m     employeeId: number,
[7m   [0m [91m              ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m159[0m:[93m13[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m159[0m     newStart: Date | string,
[7m   [0m [91m            ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m160[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m160[0m     newEnd: Date | string,
[7m   [0m [91m          ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m161[0m:[93m4[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m161[0m   ): Promise<void> {
[7m   [0m [91m   ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m161[0m:[93m18[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m161[0m   ): Promise<void> {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m162[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m162[0m     const newStartDate = newStart instanceof Date ? newStart : new Date(newStart);
[7m   [0m [91m          ~~~~~~~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m162[0m:[93m82[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m162[0m     const newStartDate = newStart instanceof Date ? newStart : new Date(newStart);
[7m   [0m [91m                                                                                 ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m163[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m163[0m     const newEndDate = newEnd instanceof Date ? newEnd : new Date(newEnd);
[7m   [0m [91m          ~~~~~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m163[0m:[93m74[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m163[0m     const newEndDate = newEnd instanceof Date ? newEnd : new Date(newEnd);
[7m   [0m [91m                                                                         ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m164[0m:[93m13[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m164[0m       const conflicts = await this.checkForOverlaps(
[7m   [0m [91m            ~~~~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m168[0m:[93m6[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m168[0m     );
[7m   [0m [91m     ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m169[0m:[93m10[0m - [91merror[0m[90m TS1359: [0mIdentifier expected. 'const' is a reserved word that cannot be used here.

[7m169[0m     for (const alloc of conflicts) {
[7m   [0m [91m         ~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m169[0m:[93m16[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m169[0m     for (const alloc of conflicts) {
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m169[0m:[93m22[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m169[0m     for (const alloc of conflicts) {
[7m   [0m [91m                     ~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m169[0m:[93m25[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m169[0m     for (const alloc of conflicts) {
[7m   [0m [91m                        ~~~~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m203[0m:[93m1[0m - [91merror[0m[90m TS1128: [0mDeclaration or statement expected.

[7m203[0m public async checkOverridePossibility(
[7m   [0m [91m~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m203[0m:[93m8[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m203[0m public async checkOverridePossibility(
[7m   [0m [91m       ~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m204[0m:[93m13[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m204[0m   employeeId: number,
[7m   [0m [91m            ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m205[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m205[0m   startDate: Date | string,
[7m   [0m [91m           ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m206[0m:[93m10[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m206[0m   endDate: Date | string
[7m   [0m [91m         ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m207[0m:[93m2[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m207[0m ): Promise<{
[7m   [0m [91m ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m208[0m:[93m23[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m208[0m   canOverride: boolean;
[7m   [0m [91m                      ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m209[0m:[93m25[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m209[0m   conflicts: Allocation[];
[7m   [0m [91m                        [0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m209[0m:[93m26[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m209[0m   conflicts: Allocation[];
[7m   [0m [91m                         ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m210[0m:[93m27[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m210[0m   wouldDelete: Allocation[];
[7m   [0m [91m                          [0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m210[0m:[93m28[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m210[0m   wouldDelete: Allocation[];
[7m   [0m [91m                           ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m211[0m:[93m27[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m211[0m   wouldModify: Allocation[];
[7m   [0m [91m                          [0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m211[0m:[93m28[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m211[0m   wouldModify: Allocation[];
[7m   [0m [91m                           ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m213[0m:[93m9[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m213[0m   const start = new Date(startDate);
[7m   [0m [91m        ~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m213[0m:[93m36[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m213[0m   const start = new Date(startDate);
[7m   [0m [91m                                   ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m214[0m:[93m9[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m214[0m   const end = new Date(endDate);
[7m   [0m [91m        ~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m214[0m:[93m32[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m214[0m   const end = new Date(endDate);
[7m   [0m [91m                               ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m216[0m:[93m9[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m216[0m   const conflicts = await this.checkForOverlaps(employeeId, start, end);
[7m   [0m [91m        ~~~~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m216[0m:[93m72[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m216[0m   const conflicts = await this.checkForOverlaps(employeeId, start, end);
[7m   [0m [91m                                                                       ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m218[0m:[93m9[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m218[0m   const wouldDelete = conflicts.filter(alloc => {
[7m   [0m [91m        ~~~~~~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m222[0m:[93m5[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m222[0m   });
[7m   [0m [91m    ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m224[0m:[93m9[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m224[0m   const wouldModify = conflicts.filter(alloc => {
[7m   [0m [91m        ~~~~~~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m228[0m:[93m5[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m228[0m   });
[7m   [0m [91m    ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m230[0m:[93m10[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m230[0m   return {
[7m   [0m [91m         ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m235[0m:[93m4[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m235[0m   };
[7m   [0m [91m   ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m238[0m:[93m1[0m - [91merror[0m[90m TS1128: [0mDeclaration or statement expected.

[7m238[0m }
[7m   [0m [91m~[0m

TSError: тип Unable to compile TypeScript:
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m83[0m:[93m3[0m - [91merror[0m[90m TS1128: [0mDeclaration or statement expected.

[7m83[0m   public async getEmployeeAllocations(employeeId: number): Promise<Allocation[]> {
[7m  [0m [91m  ~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m83[0m:[93m10[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m83[0m   public async getEmployeeAllocations(employeeId: number): Promise<Allocation[]> {
[7m  [0m [91m         ~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m83[0m:[93m49[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m83[0m   public async getEmployeeAllocations(employeeId: number): Promise<Allocation[]> {
[7m  [0m [91m                                                ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m83[0m:[93m58[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m83[0m   public async getEmployeeAllocations(employeeId: number): Promise<Allocation[]> {
[7m  [0m [91m                                                         ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m83[0m:[93m79[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m83[0m   public async getEmployeeAllocations(employeeId: number): Promise<Allocation[]> {
[7m  [0m [91m                                                                              [0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m84[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m84[0m     return await AllocationModel.findAll({
[7m  [0m [91m           ~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m88[0m:[93m7[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m88[0m     });
[7m  [0m [91m      ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m91[0m:[93m3[0m - [91merror[0m[90m TS1128: [0mDeclaration or statement expected.

[7m91[0m   public async getProjectAllocations(projectId: number): Promise<Allocation[]> {
[7m  [0m [91m  ~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m91[0m:[93m10[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m91[0m   public async getProjectAllocations(projectId: number): Promise<Allocation[]> {
[7m  [0m [91m         ~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m91[0m:[93m47[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m91[0m   public async getProjectAllocations(projectId: number): Promise<Allocation[]> {
[7m  [0m [91m                                              ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m91[0m:[93m56[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m91[0m   public async getProjectAllocations(projectId: number): Promise<Allocation[]> {
[7m  [0m [91m                                                       ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m91[0m:[93m77[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m91[0m   public async getProjectAllocations(projectId: number): Promise<Allocation[]> {
[7m  [0m [91m                                                                            [0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m92[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m92[0m     return await AllocationModel.findAll({
[7m  [0m [91m           ~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m118[0m:[93m7[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m118[0m     });
[7m   [0m [91m      ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m121[0m:[93m3[0m - [91merror[0m[90m TS1128: [0mDeclaration or statement expected.

[7m121[0m   public async findExistingAllocation(
[7m   [0m [91m  ~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m121[0m:[93m10[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m121[0m   public async findExistingAllocation(
[7m   [0m [91m         ~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m122[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m122[0m     employeeId: number,
[7m   [0m [91m              ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m123[0m:[93m14[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m123[0m     projectId: number,
[7m   [0m [91m             ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m124[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m124[0m     phases: string[]
[7m   [0m [91m          ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m124[0m:[93m20[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m124[0m     phases: string[]
[7m   [0m [91m                   [0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m125[0m:[93m4[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m125[0m   ): Promise<Allocation | null> {
[7m   [0m [91m   ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m126[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m126[0m     const normalizedPhases = JSON.stringify([...phases].sort());
[7m   [0m [91m          ~~~~~~~~~~~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m126[0m:[93m64[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m126[0m     const normalizedPhases = JSON.stringify([...phases].sort());
[7m   [0m [91m                                                               ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m128[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m128[0m     return await AllocationModel.findOne({
[7m   [0m [91m           ~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m135[0m:[93m7[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m135[0m     });
[7m   [0m [91m      ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m138[0m:[93m3[0m - [91merror[0m[90m TS1128: [0mDeclaration or statement expected.

[7m138[0m   public async checkForOverlaps(
[7m   [0m [91m  ~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m138[0m:[93m10[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m138[0m   public async checkForOverlaps(
[7m   [0m [91m         ~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m139[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m139[0m     employeeId: number,
[7m   [0m [91m              ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m140[0m:[93m14[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m140[0m     startDate: Date,
[7m   [0m [91m             ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m141[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m141[0m     endDate: Date,
[7m   [0m [91m           ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m142[0m:[93m4[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m142[0m   ): Promise<Allocation[]> {
[7m   [0m [91m   ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m142[0m:[93m25[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m142[0m   ): Promise<Allocation[]> {
[7m   [0m [91m                        [0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m143[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m143[0m     const whereClause: any = {
[7m   [0m [91m          ~~~~~~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m143[0m:[93m22[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m143[0m     const whereClause: any = {
[7m   [0m [91m                     ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m149[0m:[93m6[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m149[0m     };
[7m   [0m [91m     ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m151[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m151[0m     return await AllocationModel.findAll({
[7m   [0m [91m           ~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m154[0m:[93m7[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m154[0m     });
[7m   [0m [91m      ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m157[0m:[93m3[0m - [91merror[0m[90m TS1128: [0mDeclaration or statement expected.

[7m157[0m   public async overrideConflictingAllocations(
[7m   [0m [91m  ~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m157[0m:[93m10[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m157[0m   public async overrideConflictingAllocations(
[7m   [0m [91m         ~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m158[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m158[0m     employeeId: number,
[7m   [0m [91m              ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m159[0m:[93m13[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m159[0m     newStart: Date | string,
[7m   [0m [91m            ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m160[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m160[0m     newEnd: Date | string,
[7m   [0m [91m          ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m161[0m:[93m4[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m161[0m   ): Promise<void> {
[7m   [0m [91m   ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m161[0m:[93m18[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m161[0m   ): Promise<void> {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m162[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m162[0m     const newStartDate = newStart instanceof Date ? newStart : new Date(newStart);
[7m   [0m [91m          ~~~~~~~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m162[0m:[93m82[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m162[0m     const newStartDate = newStart instanceof Date ? newStart : new Date(newStart);
[7m   [0m [91m                                                                                 ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m163[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m163[0m     const newEndDate = newEnd instanceof Date ? newEnd : new Date(newEnd);
[7m   [0m [91m          ~~~~~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m163[0m:[93m74[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m163[0m     const newEndDate = newEnd instanceof Date ? newEnd : new Date(newEnd);
[7m   [0m [91m                                                                         ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m164[0m:[93m13[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m164[0m       const conflicts = await this.checkForOverlaps(
[7m   [0m [91m            ~~~~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m168[0m:[93m6[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m168[0m     );
[7m   [0m [91m     ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m169[0m:[93m10[0m - [91merror[0m[90m TS1359: [0mIdentifier expected. 'const' is a reserved word that cannot be used here.

[7m169[0m     for (const alloc of conflicts) {
[7m   [0m [91m         ~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m169[0m:[93m16[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m169[0m     for (const alloc of conflicts) {
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m169[0m:[93m22[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m169[0m     for (const alloc of conflicts) {
[7m   [0m [91m                     ~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m169[0m:[93m25[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m169[0m     for (const alloc of conflicts) {
[7m   [0m [91m                        ~~~~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m203[0m:[93m1[0m - [91merror[0m[90m TS1128: [0mDeclaration or statement expected.

[7m203[0m public async checkOverridePossibility(
[7m   [0m [91m~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m203[0m:[93m8[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m203[0m public async checkOverridePossibility(
[7m   [0m [91m       ~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m204[0m:[93m13[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m204[0m   employeeId: number,
[7m   [0m [91m            ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m205[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m205[0m   startDate: Date | string,
[7m   [0m [91m           ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m206[0m:[93m10[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m206[0m   endDate: Date | string
[7m   [0m [91m         ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m207[0m:[93m2[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m207[0m ): Promise<{
[7m   [0m [91m ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m208[0m:[93m23[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m208[0m   canOverride: boolean;
[7m   [0m [91m                      ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m209[0m:[93m25[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m209[0m   conflicts: Allocation[];
[7m   [0m [91m                        [0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m209[0m:[93m26[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m209[0m   conflicts: Allocation[];
[7m   [0m [91m                         ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m210[0m:[93m27[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m210[0m   wouldDelete: Allocation[];
[7m   [0m [91m                          [0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m210[0m:[93m28[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m210[0m   wouldDelete: Allocation[];
[7m   [0m [91m                           ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m211[0m:[93m27[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m211[0m   wouldModify: Allocation[];
[7m   [0m [91m                          [0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m211[0m:[93m28[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m211[0m   wouldModify: Allocation[];
[7m   [0m [91m                           ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m213[0m:[93m9[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m213[0m   const start = new Date(startDate);
[7m   [0m [91m        ~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m213[0m:[93m36[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m213[0m   const start = new Date(startDate);
[7m   [0m [91m                                   ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m214[0m:[93m9[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m214[0m   const end = new Date(endDate);
[7m   [0m [91m        ~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m214[0m:[93m32[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m214[0m   const end = new Date(endDate);
[7m   [0m [91m                               ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m216[0m:[93m9[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m216[0m   const conflicts = await this.checkForOverlaps(employeeId, start, end);
[7m   [0m [91m        ~~~~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m216[0m:[93m72[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m216[0m   const conflicts = await this.checkForOverlaps(employeeId, start, end);
[7m   [0m [91m                                                                       ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m218[0m:[93m9[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m218[0m   const wouldDelete = conflicts.filter(alloc => {
[7m   [0m [91m        ~~~~~~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m222[0m:[93m5[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m222[0m   });
[7m   [0m [91m    ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m224[0m:[93m9[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m224[0m   const wouldModify = conflicts.filter(alloc => {
[7m   [0m [91m        ~~~~~~~~~~~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m228[0m:[93m5[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m228[0m   });
[7m   [0m [91m    ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m230[0m:[93m10[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m230[0m   return {
[7m   [0m [91m         ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m235[0m:[93m4[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m235[0m   };
[7m   [0m [91m   ~[0m
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m238[0m:[93m1[0m - [91merror[0m[90m TS1128: [0mDeclaration or statement expected.

[7m238[0m }
[7m   [0m [91m~[0m

    at createTSError (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:859:12)
    at reportTSError (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:863:19)
    at C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1379:34
    at Object.compile (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1458:13)
    at Module.m._compile (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1617:30)
    at node:internal/modules/cjs/loader:1689:10
    at Object.require.extensions.<computed> [as .ts] (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1621:12)
    at Module.load (node:internal/modules/cjs/loader:1318:32)
    at Function._load (node:internal/modules/cjs/loader:1128:12)
    at TracingChannel.traceSync (node:diagnostics_channel:315:14)
2025-04-19 15:07:47 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:09:26 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 15:09:26 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 15:09:37 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 15:09:37 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 15:10:15 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 15:10:15 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 15:10:52 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:11:28 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:14:15 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:14:21 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:14:27 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:15:16 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:15:16 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:15:28 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:17:54 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:17:54 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:17:56 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:18:03 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:24:35 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:26:21 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:26:41 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:26:53 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:33:04 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:33:14 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 15:33:14 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 15:33:56 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 15:33:56 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 15:34:03 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 15:34:03 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 15:34:59 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 15:35:00 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 15:35:21 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 15:35:21 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 15:58:58 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:58:58 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:59:08 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:59:08 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:59:11 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 15:59:11 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 15:59:24 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:59:24 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:59:35 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:59:36 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:59:50 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:59:50 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:59:59 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 15:59:59 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 17:42:23 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 17:44:03 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 17:46:56 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 17:46:56 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 18:01:57 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 18:01:58 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 18:01:58 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 18:17:26 error: uncaughtException: тип Unable to compile TypeScript:
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m238[0m:[93m28[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m238[0m           projectId: alloc.,
[7m   [0m [91m                           ~[0m

TSError: тип Unable to compile TypeScript:
[96msrc/repositories/allocation/allocation.repository.ts[0m:[93m238[0m:[93m28[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m238[0m           projectId: alloc.,
[7m   [0m [91m                           ~[0m

    at createTSError (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:859:12)
    at reportTSError (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:863:19)
    at C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1379:34
    at Object.compile (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1458:13)
    at Module.m._compile (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1617:30)
    at node:internal/modules/cjs/loader:1689:10
    at Object.require.extensions.<computed> [as .ts] (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1621:12)
    at Module.load (node:internal/modules/cjs/loader:1318:32)
    at Function._load (node:internal/modules/cjs/loader:1128:12)
    at TracingChannel.traceSync (node:diagnostics_channel:315:14)
2025-04-19 18:18:26 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 18:18:26 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 18:18:29 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 18:29:51 error: [PUT] /api/allocations/solveResourceConflicts >> StatusCode:: 400, Message:: Cannot override conflicting allocations. Non-overridable conflicts: 16
2025-04-19 18:30:10 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 18:30:10 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 18:31:58 error: [PUT] /api/allocations/solveResourceConflicts >> StatusCode:: 400, Message:: Cannot override conflicting allocations. Non-overridable conflicts: 16
2025-04-19 18:32:14 error: [PUT] /api/allocations/solveResourceConflicts >> StatusCode:: 400, Message:: Cannot override conflicting allocations. Non-overridable conflicts: 16
2025-04-19 18:33:10 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 18:33:10 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 18:33:14 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 18:35:19 error: [PUT] /api/allocations/solveResourceConflicts >> StatusCode:: 400, Message:: Cannot override conflicting allocations. Non-overridable conflicts: 16
2025-04-19 18:36:10 error: [PUT] /api/allocations/solveResourceConflicts >> StatusCode:: 400, Message:: Cannot override conflicting allocations. Non-overridable conflicts: 16
2025-04-19 18:36:47 error: [PUT] /api/allocations/solveResourceConflicts >> StatusCode:: 400, Message:: Cannot override conflicting allocations. Non-overridable conflicts: 16
2025-04-19 18:37:21 error: [PUT] /api/allocations/solveResourceConflicts >> StatusCode:: 400, Message:: Cannot override conflicting allocations. Non-overridable conflicts: 16
2025-04-19 18:38:25 error: [PUT] /api/allocations/solveResourceConflicts >> StatusCode:: 400, Message:: Cannot override conflicting allocations. Non-overridable conflicts: 16
2025-04-19 18:38:27 error: [PUT] /api/allocations/solveResourceConflicts >> StatusCode:: 400, Message:: Cannot override conflicting allocations. Non-overridable conflicts: 16
2025-04-19 18:38:37 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 18:39:08 error: [PUT] /api/allocations/solveResourceConflicts >> StatusCode:: 400, Message:: Cannot override conflicting allocations. Non-overridable conflicts: 16
2025-04-19 18:43:16 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 18:43:16 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 18:43:21 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 18:43:43 error: [PUT] /api/allocations/solveResourceConflicts >> StatusCode:: 400, Message:: Cannot override conflicting allocations. Non-overridable conflicts: 16
2025-04-19 18:44:23 error: [PUT] /api/allocations/solveResourceConflicts >> StatusCode:: 400, Message:: Cannot override conflicting allocations. Non-overridable conflicts: 16
2025-04-19 18:44:45 error: [PUT] /api/allocations/solveResourceConflicts >> StatusCode:: 400, Message:: Cannot override conflicting allocations. Non-overridable conflicts: 16
2025-04-19 18:44:53 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 18:44:54 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 18:48:54 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 18:48:54 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 18:50:23 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 18:50:24 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 18:51:14 error: [PUT] /api/allocations/solveResourceConflicts >> StatusCode:: 400, Message:: Cannot override conflicting allocations. Non-overridable conflicts: 16, 20
2025-04-19 18:51:29 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 18:52:28 error: [PUT] /api/allocations/updateAllocation/20 >> StatusCode:: 500, Message:: Failed to update allocation
2025-04-19 18:52:39 error: [PUT] /api/allocations/updateAllocation/20 >> StatusCode:: 500, Message:: Failed to update allocation
2025-04-19 18:55:18 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 18:55:18 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 18:55:18 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 18:56:20 error: [PUT] /api/allocations/solveResourceConflicts >> StatusCode:: 400, Message:: Cannot override conflicting allocations. Non-overridable conflicts: 20
2025-04-19 18:56:26 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 18:56:27 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 18:56:50 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 18:56:50 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 18:58:58 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 18:59:22 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 19:03:13 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 19:03:18 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 19:04:01 error: [PUT] /api/allocations/updateAllocation/20 >> StatusCode:: 500, Message:: Failed to override conflicts: Cannot override conflicting allocations. Non-overridable conflicts: 
2025-04-19 19:04:28 error: [PUT] /api/allocations/updateAllocation/20 >> StatusCode:: 500, Message:: Failed to override conflicts: Cannot override conflicting allocations. Non-overridable conflicts: 
2025-04-19 19:05:15 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 19:05:28 error: [PUT] /api/allocations/updateAllocation/20 >> StatusCode:: 409, Message:: Cannot override conflicting allocations: 19
2025-04-19 19:05:36 error: [PUT] /api/allocations/updateAllocation/20 >> StatusCode:: 409, Message:: Cannot override conflicting allocations: 19
2025-04-19 19:08:24 error: [PUT] /api/allocations/updateAllocation/20 >> StatusCode:: 409, Message:: Cannot override conflicting allocations: 16
2025-04-19 19:08:32 error: [PUT] /api/allocations/updateAllocation/20 >> StatusCode:: 409, Message:: Cannot override conflicting allocations: 16
2025-04-19 19:09:04 error: [PUT] /api/allocations/updateAllocation/20 >> StatusCode:: 409, Message:: Cannot override conflicting allocations: 19
2025-04-19 19:11:04 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 19:11:31 error: [PUT] /api/allocations/updateAllocation/20 >> StatusCode:: 409, Message:: Cannot override conflicting allocations. Non-overridable conflicts: 
2025-04-19 19:14:04 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 19:14:41 error: [PUT] /api/allocations/updateAllocation/20 >> StatusCode:: 409, Message:: Cannot override conflicting allocations. Non-overridable conflicts: 
2025-04-19 19:19:41 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 19:20:03 error: [PUT] /api/allocations/updateAllocation/20 >> StatusCode:: 409, Message:: Cannot override conflicting allocations. Non-overridable conflicts: 
2025-04-19 19:22:03 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 19:26:38 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 19:26:52 error: [PUT] /api/allocations/updateAllocation/20 >> StatusCode:: 409, Message:: Cannot update due to non-overridable conflicts: 16
2025-04-19 19:28:10 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 19:29:00 error: [PUT] /api/allocations/updateAllocation/20 >> StatusCode:: 409, Message:: Cannot update due to non-overridable conflicts: 19
2025-04-19 19:29:31 error: [PUT] /api/allocations/updateAllocation/20 >> StatusCode:: 409, Message:: Cannot update due to non-overridable conflicts: 19
2025-04-19 19:31:31 error: [PUT] /api/allocations/updateAllocation/20 >> StatusCode:: 409, Message:: Cannot update due to non-overridable conflicts: 19
2025-04-19 19:33:36 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 19:34:10 error: [PUT] /api/allocations/updateAllocation/20 >> StatusCode:: 409, Message:: Cannot update due to non-overridable conflicts: 19
2025-04-19 19:34:37 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 19:34:53 error: [PUT] /api/allocations/updateAllocation/20 >> StatusCode:: 409, Message:: Cannot update due to non-overridable conflicts: 19
2025-04-19 19:36:11 error: [PUT] /api/allocations/updateAllocation/20 >> StatusCode:: 409, Message:: Cannot update due to non-overridable conflicts: 19
2025-04-19 19:37:10 error: [PUT] /api/allocations/updateAllocation/20 >> StatusCode:: 409, Message:: Cannot update due to non-overridable conflicts: 19
2025-04-19 19:39:04 error: [PUT] /api/allocations/updateAllocation/20 >> StatusCode:: 409, Message:: Cannot update due to non-overridable conflicts: 19
2025-04-19 19:40:29 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 19:43:17 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 19:43:31 error: [PUT] /api/allocations/updateAllocation/20 >> StatusCode:: 409, Message:: Cannot update due to non-overridable conflicts: 19
2025-04-19 19:51:24 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 19:55:11 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 19:56:00 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 19:58:21 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 19:58:55 error: [PUT] /api/allocations/solveResourceConflicts >> StatusCode:: 400, Message:: Cannot override conflicting allocations. Non-overridable conflicts: 16
2025-04-19 20:00:38 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 20:00:54 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 20:00:54 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 20:01:42 error: [PUT] /api/allocations/solveResourceConflicts >> StatusCode:: 400, Message:: Cannot override conflicting allocations. Non-overridable conflicts: 16
2025-04-19 20:03:01 error: [PUT] /api/allocations/solveResourceConflicts >> StatusCode:: 400, Message:: Cannot override conflicting allocations. Non-overridable conflicts: 16
2025-04-19 20:03:15 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 20:04:04 error: [PUT] /api/allocations/solveResourceConflicts >> StatusCode:: 400, Message:: Validation error: End date must be after start date,
Validation error: End date must be after start date
2025-04-19 20:04:14 error: [PUT] /api/allocations/solveResourceConflicts >> StatusCode:: 400, Message:: Validation error: End date must be after start date,
Validation error: End date must be after start date
2025-04-19 20:06:45 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 20:07:48 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 20:08:10 error: [PUT] /api/allocations/updateAllocation/23 >> StatusCode:: 409, Message:: Cannot update due to non-overridable conflicts: 16
2025-04-19 20:11:15 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 20:15:07 error: [POST] /api/allocations/createAllocation >> StatusCode:: 500, Message:: Error creating allocation
2025-04-19 20:16:11 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 20:18:47 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 20:22:57 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 20:26:19 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 20:27:00 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 20:27:01 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 20:28:34 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 20:28:44 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 20:28:44 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 20:29:57 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 20:33:07 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 20:37:36 error: uncaughtException: Package subpath './types/sequelize' is not defined by "exports" in C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\sequelize\package.json
Error: Package subpath './types/sequelize' is not defined by "exports" in C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\sequelize\package.json
    at exportsNotFound (node:internal/modules/esm/resolve:296:10)
    at packageExportsResolve (node:internal/modules/esm/resolve:638:13)
    at resolveExports (node:internal/modules/cjs/loader:640:36)
    at Function._findPath (node:internal/modules/cjs/loader:748:31)
    at Function.<anonymous> (node:internal/modules/cjs/loader:1235:27)
    at Function.Module._resolveFilename.sharedData.moduleResolveFilenameHook.installedValue (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\@cspotcode\source-map-support\source-map-support.js:811:30)
    at Function.Module._resolveFilename (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\tsconfig-paths\src\register.ts:115:36)
    at Function._load (node:internal/modules/cjs/loader:1075:27)
    at TracingChannel.traceSync (node:diagnostics_channel:315:14)
    at wrapModuleLoad (node:internal/modules/cjs/loader:218:24)
2025-04-19 20:38:06 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 20:43:45 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 20:46:46 error: [PUT] /api/allocations/updateAllocation/28 >> StatusCode:: 409, Message:: Cannot update due to non-overridable conflicts: 23
2025-04-19 20:53:25 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 20:55:02 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-19 20:55:02 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-19 20:55:02 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 20:55:03 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 20:55:11 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 20:55:11 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-19 20:55:11 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 20:55:11 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-19 20:55:12 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 20:55:12 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 20:56:17 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 20:56:17 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 21:01:17 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 21:02:02 error: [POST] /api/allocations/createAllocation >> StatusCode:: 500, Message:: Error creating allocation
2025-04-19 21:08:06 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 21:08:06 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 21:08:16 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 21:08:16 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 21:15:56 error: [POST] /api/allocations/createAllocation >> StatusCode:: 500, Message:: Error creating allocation
2025-04-19 21:16:13 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 21:16:54 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 21:16:54 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 21:17:21 error: [POST] /api/allocations/createAllocation >> StatusCode:: 500, Message:: Error creating allocation
2025-04-19 21:17:58 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 21:17:58 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 21:21:11 error: [GET] /api/employees/getEmployee/0 >> StatusCode:: 404, Message:: Employee not found
2025-04-19 21:22:22 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-19 21:22:22 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-19 21:22:23 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-19 21:22:23 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
