2025-04-22 00:01:09 error: [POST] /api/auth/update-password >> StatusCode:: 400, Message:: Email, OTP and new password are required
2025-04-22 00:03:28 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 00:03:28 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 00:04:30 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 00:04:31 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 00:05:40 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 00:08:23 error: [GET] /api/projects/getEmployeeProjects/19 >> StatusCode:: 400, Message:: TypeError: this.projectRepository.getProjectsByEmployee is not a function
2025-04-22 00:08:23 error: [GET] /api/projects/getEmployeeProjects/19 >> StatusCode:: 400, Message:: TypeError: this.projectRepository.getProjectsByEmployee is not a function
2025-04-22 00:08:48 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 00:08:48 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 00:08:49 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 00:08:49 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 00:28:28 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 00:28:28 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 00:31:41 error: [GET] /api/tasks/getTaskByEmployeeAndProject/undefined/null >> StatusCode:: 500, Message:: Error fetching tasks: Unknown column 'NaN' in 'where clause'
2025-04-22 00:31:41 error: [GET] /api/tasks/getTaskByEmployeeAndProject/undefined/null >> StatusCode:: 500, Message:: Error fetching tasks: Unknown column 'NaN' in 'where clause'
2025-04-22 00:35:04 error: [GET] /api/tasks/getTaskByEmployeeAndProject/19/null >> StatusCode:: 500, Message:: Error fetching tasks: Unknown column 'NaN' in 'where clause'
2025-04-22 00:35:19 error: [GET] /api/tasks/getTaskByEmployeeAndProject/19/null >> StatusCode:: 500, Message:: Error fetching tasks: Unknown column 'NaN' in 'where clause'
2025-04-22 00:35:24 error: [GET] /api/tasks/getTaskByEmployeeAndProject/19/null >> StatusCode:: 500, Message:: Error fetching tasks: Unknown column 'NaN' in 'where clause'
2025-04-22 00:35:29 error: [GET] /api/tasks/getTaskByEmployeeAndProject/19/null >> StatusCode:: 500, Message:: Error fetching tasks: Unknown column 'NaN' in 'where clause'
2025-04-22 00:35:48 error: [GET] /api/tasks/getTaskByEmployeeAndProject/19/null >> StatusCode:: 500, Message:: Error fetching tasks: Unknown column 'NaN' in 'where clause'
2025-04-22 00:36:23 error: [GET] /api/tasks/getTaskByEmployeeAndProject/19/null >> StatusCode:: 500, Message:: Error fetching tasks: Unknown column 'NaN' in 'where clause'
2025-04-22 00:36:24 error: [GET] /api/tasks/getTaskByEmployeeAndProject/19/null >> StatusCode:: 500, Message:: Error fetching tasks: Unknown column 'NaN' in 'where clause'
2025-04-22 00:37:29 error: [GET] /api/tasks/getTaskByEmployeeAndProject/19/null >> StatusCode:: 500, Message:: Error fetching tasks: Unknown column 'NaN' in 'where clause'
2025-04-22 00:40:30 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 00:40:30 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 00:40:30 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 00:40:31 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 00:40:39 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 00:40:39 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 00:41:40 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 00:41:41 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 00:44:01 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 00:44:01 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 01:01:13 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 01:01:13 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 01:01:14 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 01:01:14 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 07:55:05 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 07:55:06 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 08:18:50 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 08:18:50 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 08:18:52 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 08:18:52 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 08:18:58 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 08:18:59 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 08:23:09 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 08:23:09 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 08:23:09 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 08:23:10 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 08:30:06 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 08:30:06 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 08:30:07 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 08:30:08 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 08:30:51 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 08:30:51 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 08:30:52 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 08:30:52 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 08:31:46 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 08:31:47 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 09:20:19 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 09:20:20 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 09:26:13 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 09:26:13 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 09:26:15 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 09:26:15 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 09:26:22 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 09:26:22 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 09:32:59 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 09:32:59 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 09:33:46 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 09:35:39 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 09:44:07 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 09:44:07 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 09:44:08 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 09:44:08 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 09:45:29 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 09:45:31 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 09:45:33 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 09:45:33 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 09:54:16 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 09:54:17 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 09:56:10 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 09:56:10 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 09:56:11 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 09:56:11 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 09:56:23 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 09:56:23 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 10:02:10 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 10:02:11 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 10:02:42 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 10:02:42 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 10:02:43 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 10:02:44 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 10:02:48 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 10:02:48 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 10:03:07 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 10:03:07 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 10:05:01 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 10:05:01 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 10:05:01 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 10:05:02 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 10:06:56 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 10:06:56 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 10:17:13 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 10:17:14 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 10:18:12 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 10:18:12 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 10:18:13 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 10:18:14 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 10:18:30 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 10:18:31 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 10:18:53 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 10:18:53 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 10:18:53 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 10:18:54 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 10:21:18 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 10:21:18 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 10:22:10 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 10:22:11 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 10:28:20 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 10:28:20 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 10:28:21 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 10:28:22 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 10:28:23 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 10:28:24 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 10:29:31 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 10:29:31 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 10:29:33 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 10:29:33 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 10:30:02 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 10:30:03 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 10:44:45 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 10:44:45 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 10:44:46 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 10:44:47 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 10:48:46 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 10:48:46 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 11:04:20 error: Unable to connect to the database: Table 'db_aa010d_eltek.employees' doesn't exist
2025-04-22 11:04:46 error: Unable to connect to the database: Table 'db_aa010d_eltek.employees' doesn't exist
2025-04-22 11:29:47 error: uncaughtException: ⨯ Unable to compile TypeScript:
[96msrc/repositories/project/project.repository.ts[0m:[93m11[0m:[93m59[0m - [91merror[0m[90m TS1005: [0m'>' expected.

[7m11[0m type UpdateProjectData = Partial<IProject & { id: number };
[7m  [0m [91m                                                          ~[0m

TSError: ⨯ Unable to compile TypeScript:
[96msrc/repositories/project/project.repository.ts[0m:[93m11[0m:[93m59[0m - [91merror[0m[90m TS1005: [0m'>' expected.

[7m11[0m type UpdateProjectData = Partial<IProject & { id: number };
[7m  [0m [91m                                                          ~[0m

    at createTSError (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:859:12)
    at reportTSError (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:863:19)
    at C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1379:34
    at Object.compile (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1458:13)
    at Module.m._compile (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1617:30)
    at node:internal/modules/cjs/loader:1689:10
    at Object.require.extensions.<computed> [as .ts] (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1621:12)
    at Module.load (node:internal/modules/cjs/loader:1318:32)
    at Function._load (node:internal/modules/cjs/loader:1128:12)
    at TracingChannel.traceSync (node:diagnostics_channel:315:14)
2025-04-22 11:32:03 error: uncaughtException: ⨯ Unable to compile TypeScript:
[96msrc/routes/project/project.routes.ts[0m:[93m26[0m:[93m112[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m26[0m         this.router.get(`${this.path}/getProjectEstimatedCost`,authorizationMiddleware, this.projectController.);
[7m  [0m [91m                                                                                                               ~[0m

TSError: ⨯ Unable to compile TypeScript:
[96msrc/routes/project/project.routes.ts[0m:[93m26[0m:[93m112[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m26[0m         this.router.get(`${this.path}/getProjectEstimatedCost`,authorizationMiddleware, this.projectController.);
[7m  [0m [91m                                                                                                               ~[0m

    at createTSError (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:859:12)
    at reportTSError (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:863:19)
    at C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1379:34
    at Object.compile (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1458:13)
    at Module.m._compile (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1617:30)
    at node:internal/modules/cjs/loader:1689:10
    at Object.require.extensions.<computed> [as .ts] (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1621:12)
    at Module.load (node:internal/modules/cjs/loader:1318:32)
    at Function._load (node:internal/modules/cjs/loader:1128:12)
    at TracingChannel.traceSync (node:diagnostics_channel:315:14)
2025-04-22 11:34:37 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 11:34:37 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 11:34:38 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 11:34:39 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 11:35:28 error: [POST] /api/auth/signup >> StatusCode:: 409, Message:: This email kwanelendaba69@gmail.com already exists
2025-04-22 11:36:35 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 11:36:36 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 11:38:30 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 11:38:30 error: [GET] /api/tasks/getEmployeeProjectHours/19 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 11:39:09 error: [POST] /api/auth/login >> StatusCode:: 400, Message:: Invalid password
2025-04-22 11:41:02 error: [GET] /api/tasks/getEmployeeProjectHours/1 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 11:41:03 error: [GET] /api/tasks/getEmployeeProjectHours/1 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 11:42:52 error: [GET] /api/projects/getProjectEstimatedCost/1 >> StatusCode:: 401, Message:: Authentication required
2025-04-22 11:52:07 error: uncaughtException: Package subpath './types/sequelize' is not defined by "exports" in C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\sequelize\package.json
Error: Package subpath './types/sequelize' is not defined by "exports" in C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\sequelize\package.json
    at exportsNotFound (node:internal/modules/esm/resolve:296:10)
    at packageExportsResolve (node:internal/modules/esm/resolve:638:13)
    at resolveExports (node:internal/modules/cjs/loader:640:36)
    at Function._findPath (node:internal/modules/cjs/loader:748:31)
    at Function.<anonymous> (node:internal/modules/cjs/loader:1235:27)
    at Function.Module._resolveFilename.sharedData.moduleResolveFilenameHook.installedValue (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\@cspotcode\source-map-support\source-map-support.js:811:30)
    at Function.Module._resolveFilename (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\tsconfig-paths\src\register.ts:115:36)
    at Function._load (node:internal/modules/cjs/loader:1075:27)
    at TracingChannel.traceSync (node:diagnostics_channel:315:14)
    at wrapModuleLoad (node:internal/modules/cjs/loader:218:24)
2025-04-22 11:55:32 error: uncaughtException: ⨯ Unable to compile TypeScript:
[96msrc/repositories/task/task.repository.ts[0m:[93m131[0m:[93m1[0m - [91merror[0m[90m TS1068: [0mUnexpected token. A constructor, method, accessor, or property was expected.

[7m131[0m import { Op, Transaction } from "sequelize";
[7m   [0m [91m~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m133[0m:[93m1[0m - [91merror[0m[90m TS1128: [0mDeclaration or statement expected.

[7m133[0m public async approveTask(approvalData: ITaskModification): Promise<ITask> {
[7m   [0m [91m~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m133[0m:[93m8[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m133[0m public async approveTask(approvalData: ITaskModification): Promise<ITask> {
[7m   [0m [91m       ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m133[0m:[93m38[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m133[0m public async approveTask(approvalData: ITaskModification): Promise<ITask> {
[7m   [0m [91m                                     ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m133[0m:[93m58[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m133[0m public async approveTask(approvalData: ITaskModification): Promise<ITask> {
[7m   [0m [91m                                                         ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m136[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m136[0m     const transaction = await this.sequelize.transaction(); // Assuming 'this.sequelize' is your Sequelize instance
[7m   [0m [91m          ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m136[0m:[93m59[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m136[0m     const transaction = await this.sequelize.transaction(); // Assuming 'this.sequelize' is your Sequelize instance
[7m   [0m [91m                                                          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m138[0m:[93m9[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m138[0m     try {
[7m   [0m [91m        ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m139[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m139[0m         const task = await Task.findByPk(approvalData.taskId, {
[7m   [0m [91m              ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m146[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m146[0m         });
[7m   [0m [91m          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m148[0m:[93m13[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m148[0m         if (!task) {
[7m   [0m [91m            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m154[0m:[93m9[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m154[0m         await task.update({
[7m   [0m [91m        ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m154[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m154[0m         await task.update({
[7m   [0m [91m              ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m157[0m:[93m28[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m157[0m         }, { transaction });
[7m   [0m [91m                           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m159[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m159[0m         const allocation = task.allocation as AllocationModel;
[7m   [0m [91m              ~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m159[0m:[93m62[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m159[0m         const allocation = task.allocation as AllocationModel;
[7m   [0m [91m                                                             ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m160[0m:[93m13[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m160[0m         if (!allocation?.projectId || !allocation?.chargeOutRate) {
[7m   [0m [91m            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m160[0m:[93m24[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m160[0m         if (!allocation?.projectId || !allocation?.chargeOutRate) {
[7m   [0m [91m                       ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m160[0m:[93m36[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m160[0m         if (!allocation?.projectId || !allocation?.chargeOutRate) {
[7m   [0m [91m                                   ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m160[0m:[93m39[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m160[0m         if (!allocation?.projectId || !allocation?.chargeOutRate) {
[7m   [0m [91m                                      ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m160[0m:[93m50[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m160[0m         if (!allocation?.projectId || !allocation?.chargeOutRate) {
[7m   [0m [91m                                                 ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m166[0m:[93m9[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m166[0m         const actualHours = task.actualHours || 0;
[7m   [0m [91m        ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m166[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m166[0m         const actualHours = task.actualHours || 0;
[7m   [0m [91m              ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m166[0m:[93m50[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m166[0m         const actualHours = task.actualHours || 0;
[7m   [0m [91m                                                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m167[0m:[93m25[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m167[0m         if (actualHours <= 0) {
[7m   [0m [91m                        ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m167[0m:[93m28[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m167[0m         if (actualHours <= 0) {
[7m   [0m [91m                           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m173[0m:[93m9[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m173[0m         const project = await Project.findByPk(allocation.projectId, {
[7m   [0m [91m        ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m173[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m173[0m         const project = await Project.findByPk(allocation.projectId, {
[7m   [0m [91m              ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m176[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m176[0m         });
[7m   [0m [91m          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m178[0m:[93m13[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m178[0m         if (!project) {
[7m   [0m [91m            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m184[0m:[93m9[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m184[0m         const taskDate = new Date(task.taskDate);
[7m   [0m [91m        ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m184[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m184[0m         const taskDate = new Date(task.taskDate);
[7m   [0m [91m              ~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m184[0m:[93m49[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m184[0m         const taskDate = new Date(task.taskDate);
[7m   [0m [91m                                                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m185[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m185[0m         const monthKey = `${taskDate.getFullYear()}-${(taskDate.getMonth() + 1)
[7m   [0m [91m              ~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m186[0m:[93m43[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m186[0m             .toString().padStart(2, '0')}`;
[7m   [0m [91m                                          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m189[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m189[0m         const updatedCosts = project.estimatedCost || {};
[7m   [0m [91m              ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m189[0m:[93m57[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m189[0m         const updatedCosts = project.estimatedCost || {};
[7m   [0m [91m                                                        ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m190[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m190[0m         const costToAdd = actualHours * allocation.chargeOutRate;
[7m   [0m [91m              ~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m190[0m:[93m65[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m190[0m         const costToAdd = actualHours * allocation.chargeOutRate;
[7m   [0m [91m                                                                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m191[0m:[93m21[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m191[0m         updatedCosts[monthKey] = (updatedCosts[monthKey] || 0) + costToAdd;
[7m   [0m [91m                    ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m191[0m:[93m32[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m191[0m         updatedCosts[monthKey] = (updatedCosts[monthKey] || 0) + costToAdd;
[7m   [0m [91m                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m191[0m:[93m75[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m191[0m         updatedCosts[monthKey] = (updatedCosts[monthKey] || 0) + costToAdd;
[7m   [0m [91m                                                                          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m194[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m194[0m         await project.update({
[7m   [0m [91m              ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m196[0m:[93m28[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m196[0m         }, { transaction });
[7m   [0m [91m                           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m198[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m198[0m         await transaction.commit();
[7m   [0m [91m              ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m198[0m:[93m35[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m198[0m         await transaction.commit();
[7m   [0m [91m                                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m199[0m:[93m16[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m199[0m         return task.get({ plain: true });
[7m   [0m [91m               ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m199[0m:[93m41[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m199[0m         return task.get({ plain: true });
[7m   [0m [91m                                        ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m200[0m:[93m7[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m200[0m     } catch (error) {
[7m   [0m [91m      ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m205[0m:[93m5[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m205[0m     public async rejectTask(rejectionData : ITaskModification): Promise<ITask> {
[7m   [0m [91m    ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m205[0m:[93m12[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m205[0m     public async rejectTask(rejectionData : ITaskModification): Promise<ITask> {
[7m   [0m [91m           ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m205[0m:[93m43[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m205[0m     public async rejectTask(rejectionData : ITaskModification): Promise<ITask> {
[7m   [0m [91m                                          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m205[0m:[93m63[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m205[0m     public async rejectTask(rejectionData : ITaskModification): Promise<ITask> {
[7m   [0m [91m                                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m206[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m206[0m         const task = await Task.findByPk(rejectionData.taskId);
[7m   [0m [91m              ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m206[0m:[93m63[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m206[0m         const task = await Task.findByPk(rejectionData.taskId);
[7m   [0m [91m                                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m207[0m:[93m13[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m207[0m         if (!task) throw new Error("Task not found");
[7m   [0m [91m            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m207[0m:[93m20[0m - [91merror[0m[90m TS1005: [0m'{' expected.

[7m207[0m         if (!task) throw new Error("Task not found");
[7m   [0m [91m                   ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m207[0m:[93m26[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m207[0m         if (!task) throw new Error("Task not found");
[7m   [0m [91m                         ~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m207[0m:[93m53[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m207[0m         if (!task) throw new Error("Task not found");
[7m   [0m [91m                                                    ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m208[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m208[0m         await task.update({ status: 'rejected', reasonForRejection : rejectionData.reasonForRejection, modifiedBy : rejectionData.modifiedBy });
[7m   [0m [91m              ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m208[0m:[93m144[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m208[0m         await task.update({ status: 'rejected', reasonForRejection : rejectionData.reasonForRejection, modifiedBy : rejectionData.modifiedBy });
[7m   [0m [91m                                                                                                                                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m209[0m:[93m16[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m209[0m         return task.get({ plain: true });
[7m   [0m [91m               ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m209[0m:[93m41[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m209[0m         return task.get({ plain: true });
[7m   [0m [91m                                        ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m212[0m:[93m5[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m212[0m     public async getProjectHoursSummary(): Promise<IProjectsHours> {
[7m   [0m [91m    ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m212[0m:[93m12[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m212[0m     public async getProjectHoursSummary(): Promise<IProjectsHours> {
[7m   [0m [91m           ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m212[0m:[93m42[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m212[0m     public async getProjectHoursSummary(): Promise<IProjectsHours> {
[7m   [0m [91m                                         ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m213[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m213[0m         const result = await Task.findOne({
[7m   [0m [91m              ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m221[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m221[0m         });
[7m   [0m [91m          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m223[0m:[93m16[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m223[0m         return {
[7m   [0m [91m               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m228[0m:[93m10[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m228[0m         };
[7m   [0m [91m         ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m231[0m:[93m7[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m231[0m       public async getEmployeeProjectHoursSummary(employeeId: string): Promise<IProjectsHours> {
[7m   [0m [91m      ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m231[0m:[93m14[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m231[0m       public async getEmployeeProjectHoursSummary(employeeId: string): Promise<IProjectsHours> {
[7m   [0m [91m             ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m231[0m:[93m61[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m231[0m       public async getEmployeeProjectHoursSummary(employeeId: string): Promise<IProjectsHours> {
[7m   [0m [91m                                                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m231[0m:[93m70[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m231[0m       public async getEmployeeProjectHoursSummary(employeeId: string): Promise<IProjectsHours> {
[7m   [0m [91m                                                                     ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m232[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m232[0m         const result = await Task.findOne({
[7m   [0m [91m              ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m243[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m243[0m         });
[7m   [0m [91m          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m245[0m:[93m16[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m245[0m         return {
[7m   [0m [91m               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m250[0m:[93m10[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m250[0m         };
[7m   [0m [91m         ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m253[0m:[93m7[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m253[0m       public async getCurrentWeekHours(allocationId: number): Promise<EmployeeTimesheet[]> {
[7m   [0m [91m      ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m253[0m:[93m14[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m253[0m       public async getCurrentWeekHours(allocationId: number): Promise<EmployeeTimesheet[]> {
[7m   [0m [91m             ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m253[0m:[93m52[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m253[0m       public async getCurrentWeekHours(allocationId: number): Promise<EmployeeTimesheet[]> {
[7m   [0m [91m                                                   ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m253[0m:[93m61[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m253[0m       public async getCurrentWeekHours(allocationId: number): Promise<EmployeeTimesheet[]> {
[7m   [0m [91m                                                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m253[0m:[93m89[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m253[0m       public async getCurrentWeekHours(allocationId: number): Promise<EmployeeTimesheet[]> {
[7m   [0m [91m                                                                                        [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m254[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m254[0m         const { start, end } = this.getCurrentWeekDates();
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m254[0m:[93m58[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m254[0m         const { start, end } = this.getCurrentWeekDates();
[7m   [0m [91m                                                         ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m255[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m255[0m         const weekDays = this.generateWeekDays(start);
[7m   [0m [91m              ~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m255[0m:[93m54[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m255[0m         const weekDays = this.generateWeekDays(start);
[7m   [0m [91m                                                     ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m257[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m257[0m         const tasks = await Task.findAll({
[7m   [0m [91m              ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m267[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m267[0m         });
[7m   [0m [91m          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m269[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m269[0m         const employeesMap = new Map<number, EmployeeTimesheet>();
[7m   [0m [91m              ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m269[0m:[93m66[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m269[0m         const employeesMap = new Map<number, EmployeeTimesheet>();
[7m   [0m [91m                                                                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m271[0m:[93m14[0m - [91merror[0m[90m TS1359: [0mIdentifier expected. 'const' is a reserved word that cannot be used here.

[7m271[0m         for (const task of tasks) {
[7m   [0m [91m             ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m271[0m:[93m20[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m271[0m         for (const task of tasks) {
[7m   [0m [91m                   ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m271[0m:[93m25[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m271[0m         for (const task of tasks) {
[7m   [0m [91m                        ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m271[0m:[93m28[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m271[0m         for (const task of tasks) {
[7m   [0m [91m                           ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m293[0m:[93m9[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m293[0m         return Array.from(employeesMap.values());
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m293[0m:[93m16[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m293[0m         return Array.from(employeesMap.values());
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m293[0m:[93m49[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m293[0m         return Array.from(employeesMap.values());
[7m   [0m [91m                                                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m295[0m:[93m5[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m295[0m     private getCurrentWeekDates(): { start: Date; end: Date } {
[7m   [0m [91m    ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m295[0m:[93m34[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m295[0m     private getCurrentWeekDates(): { start: Date; end: Date } {
[7m   [0m [91m                                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m307[0m:[93m5[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m307[0m     private generateWeekDays(startDate: Date): string[] {
[7m   [0m [91m    ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m307[0m:[93m39[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m307[0m     private generateWeekDays(startDate: Date): string[] {
[7m   [0m [91m                                      ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m307[0m:[93m46[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m307[0m     private generateWeekDays(startDate: Date): string[] {
[7m   [0m [91m                                             ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m307[0m:[93m55[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m307[0m     private generateWeekDays(startDate: Date): string[] {
[7m   [0m [91m                                                      [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m307[0m:[93m57[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m307[0m     private generateWeekDays(startDate: Date): string[] {
[7m   [0m [91m                                                        ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m318[0m:[93m5[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m318[0m     private formatDate(date: Date): string {
[7m   [0m [91m    ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m318[0m:[93m28[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m318[0m     private formatDate(date: Date): string {
[7m   [0m [91m                           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m318[0m:[93m35[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m318[0m     private formatDate(date: Date): string {
[7m   [0m [91m                                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m318[0m:[93m37[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m318[0m     private formatDate(date: Date): string {
[7m   [0m [91m                                    ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m323[0m:[93m5[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m323[0m     public async getEmployeeMonthlyTasks(
[7m   [0m [91m    ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m323[0m:[93m12[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m323[0m     public async getEmployeeMonthlyTasks(
[7m   [0m [91m           ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m324[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m324[0m       allocationId: number,
[7m   [0m [91m                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m325[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m325[0m       employeeId: number,
[7m   [0m [91m                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m326[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m326[0m       year: number,
[7m   [0m [91m          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m327[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m327[0m       month: number
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m328[0m:[93m4[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m328[0m   ): Promise<MonthlyTasks> {
[7m   [0m [91m   ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m329[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m329[0m       try {
[7m   [0m [91m          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m330[0m:[93m15[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m330[0m           if (!allocationId || !employeeId || !year || !month) {
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m330[0m:[93m29[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m330[0m           if (!allocationId || !employeeId || !year || !month) {
[7m   [0m [91m                            ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m330[0m:[93m32[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m330[0m           if (!allocationId || !employeeId || !year || !month) {
[7m   [0m [91m                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m330[0m:[93m44[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m330[0m           if (!allocationId || !employeeId || !year || !month) {
[7m   [0m [91m                                           ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m330[0m:[93m47[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m330[0m           if (!allocationId || !employeeId || !year || !month) {
[7m   [0m [91m                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m330[0m:[93m53[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m330[0m           if (!allocationId || !employeeId || !year || !month) {
[7m   [0m [91m                                                    ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m330[0m:[93m56[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m330[0m           if (!allocationId || !employeeId || !year || !month) {
[7m   [0m [91m                                                       ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m334[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m334[0m           const employee = await Employee.findOne({
[7m   [0m [91m          ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m334[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m334[0m           const employee = await Employee.findOne({
[7m   [0m [91m                ~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m341[0m:[93m13[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m341[0m           });
[7m   [0m [91m            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m343[0m:[93m15[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m343[0m           if (!employee || !employee || employee.allAllocation.length === 0) {
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m343[0m:[93m25[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m343[0m           if (!employee || !employee || employee.allAllocation.length === 0) {
[7m   [0m [91m                        ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m343[0m:[93m28[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m343[0m           if (!employee || !employee || employee.allAllocation.length === 0) {
[7m   [0m [91m                           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m343[0m:[93m38[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m343[0m           if (!employee || !employee || employee.allAllocation.length === 0) {
[7m   [0m [91m                                     ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m343[0m:[93m49[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m343[0m           if (!employee || !employee || employee.allAllocation.length === 0) {
[7m   [0m [91m                                                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m343[0m:[93m76[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m343[0m           if (!employee || !employee || employee.allAllocation.length === 0) {
[7m   [0m [91m                                                                           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m343[0m:[93m78[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m343[0m           if (!employee || !employee || employee.allAllocation.length === 0) {
[7m   [0m [91m                                                                             ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m344[0m:[93m21[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m344[0m               throw new HttpException(404, 'Employee is not assigned to this project');
[7m   [0m [91m                    ~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m344[0m:[93m87[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m344[0m               throw new HttpException(404, 'Employee is not assigned to this project');
[7m   [0m [91m                                                                                      ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m347[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m347[0m           const projectAllocation = employee.allAllocation.find(a => a.id === allocationId);
[7m   [0m [91m          ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m347[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m347[0m           const projectAllocation = employee.allAllocation.find(a => a.id === allocationId);
[7m   [0m [91m                ~~~~~~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m347[0m:[93m92[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m347[0m           const projectAllocation = employee.allAllocation.find(a => a.id === allocationId);
[7m   [0m [91m                                                                                           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m348[0m:[93m15[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m348[0m           if (!projectAllocation) {
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m352[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m352[0m           const startDate = new Date(Date.UTC(year, month - 1, 1));
[7m   [0m [91m          ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m352[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m352[0m           const startDate = new Date(Date.UTC(year, month - 1, 1));
[7m   [0m [91m                ~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m352[0m:[93m67[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m352[0m           const startDate = new Date(Date.UTC(year, month - 1, 1));
[7m   [0m [91m                                                                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m353[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m353[0m           const endDate = new Date(Date.UTC(year, month, 0));
[7m   [0m [91m                ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m353[0m:[93m61[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m353[0m           const endDate = new Date(Date.UTC(year, month, 0));
[7m   [0m [91m                                                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m354[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m354[0m           endDate.setUTCHours(23, 59, 59, 999);
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m354[0m:[93m47[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m354[0m           endDate.setUTCHours(23, 59, 59, 999);
[7m   [0m [91m                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m356[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m356[0m           const tasks = await Task.findAll({
[7m   [0m [91m                ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m367[0m:[93m13[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m367[0m           });
[7m   [0m [91m            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m369[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m369[0m           const totalHours = tasks.reduce((sum, task) => sum + task.actualHours, 0);
[7m   [0m [91m                ~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m369[0m:[93m84[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m369[0m           const totalHours = tasks.reduce((sum, task) => sum + task.actualHours, 0);
[7m   [0m [91m                                                                                   ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m370[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m370[0m           const rate = Number(projectAllocation.chargeOutRate);
[7m   [0m [91m                ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m370[0m:[93m63[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m370[0m           const rate = Number(projectAllocation.chargeOutRate);
[7m   [0m [91m                                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m371[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m371[0m           const totalCost = totalHours * rate;
[7m   [0m [91m                ~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m371[0m:[93m46[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m371[0m           const totalCost = totalHours * rate;
[7m   [0m [91m                                             ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m373[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m373[0m           return {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m388[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m388[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m390[0m:[93m9[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m390[0m       } catch (error) {
[7m   [0m [91m        ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m394[0m:[93m3[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m394[0m   }
[7m   [0m [91m  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m396[0m:[93m3[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m396[0m   public async getTotalHoursByEmployee(employeeId: number): Promise<number> {
[7m   [0m [91m  ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m396[0m:[93m10[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m396[0m   public async getTotalHoursByEmployee(employeeId: number): Promise<number> {
[7m   [0m [91m         ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m396[0m:[93m50[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m396[0m   public async getTotalHoursByEmployee(employeeId: number): Promise<number> {
[7m   [0m [91m                                                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m396[0m:[93m59[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m396[0m   public async getTotalHoursByEmployee(employeeId: number): Promise<number> {
[7m   [0m [91m                                                          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m397[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m397[0m     const result = await Task.findOne({
[7m   [0m [91m          ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m403[0m:[93m7[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m403[0m     });
[7m   [0m [91m      ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m404[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m404[0m     return result?.actualHours || 0;
[7m   [0m [91m           ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m404[0m:[93m36[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m404[0m     return result?.actualHours || 0;
[7m   [0m [91m                                   ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m408[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m408[0m         public async getTaskTimeStatistics(): Promise<{
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m408[0m:[93m16[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m408[0m         public async getTaskTimeStatistics(): Promise<{
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m408[0m:[93m45[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m408[0m         public async getTaskTimeStatistics(): Promise<{
[7m   [0m [91m                                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m409[0m:[93m94[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m409[0m           today: { totalHours: number, average: number, completionRate: number, data: number[] },
[7m   [0m [91m                                                                                             [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m410[0m:[93m98[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m410[0m           yesterday: { totalHours: number, average: number, completionRate: number, data: number[] }
[7m   [0m [91m                                                                                                 [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m412[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m412[0m           const getDateRange = (daysOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m420[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m420[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m422[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m422[0m           const getTimeBucket = (createdAt: Date) => {
[7m   [0m [91m                ~~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m431[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m431[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m433[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m433[0m           const processDay = async (daysOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m464[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m464[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m466[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m466[0m           return {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m469[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m469[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m472[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m472[0m         public async getWeeklyTaskStatistics(): Promise<{
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m472[0m:[93m16[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m472[0m         public async getWeeklyTaskStatistics(): Promise<{
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m472[0m:[93m47[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m472[0m         public async getWeeklyTaskStatistics(): Promise<{
[7m   [0m [91m                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m473[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m473[0m           thisWeek: { totalHours: number, average: number, completionRate: number, data: number[] },
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m474[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m474[0m           lastWeek: { totalHours: number, average: number, completionRate: number, data: number[] }
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m476[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m476[0m           const getWeekRange = (weeksOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m487[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m487[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m489[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m489[0m           const getDayIndex = (createdAt: Date) => {
[7m   [0m [91m                ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m493[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m493[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m495[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m495[0m           const processWeek = async (weeksOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m524[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m524[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m526[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m526[0m           return {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m529[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m529[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m532[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m532[0m         public async getYearlyTaskStatistics(): Promise<{
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m532[0m:[93m16[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m532[0m         public async getYearlyTaskStatistics(): Promise<{
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m532[0m:[93m47[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m532[0m         public async getYearlyTaskStatistics(): Promise<{
[7m   [0m [91m                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m533[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m533[0m           thisYear: { totalHours: number, average: number, completionRate: number, data: number[] },
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m534[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m534[0m           lastYear: { totalHours: number, average: number, completionRate: number, data: number[] }
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m536[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m536[0m           const getYearRange = (yearOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m544[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m544[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m546[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m546[0m           const processYear = async (yearOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m578[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m578[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m580[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m580[0m           return {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m583[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m583[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m586[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m586[0m         public async getEmployeeTaskTimeStatistics(employeeId: number): Promise<{
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m586[0m:[93m16[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m586[0m         public async getEmployeeTaskTimeStatistics(employeeId: number): Promise<{
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m586[0m:[93m62[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m586[0m         public async getEmployeeTaskTimeStatistics(employeeId: number): Promise<{
[7m   [0m [91m                                                             ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m586[0m:[93m71[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m586[0m         public async getEmployeeTaskTimeStatistics(employeeId: number): Promise<{
[7m   [0m [91m                                                                      ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m587[0m:[93m94[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m587[0m           today: { totalHours: number, average: number, completionRate: number, data: number[] },
[7m   [0m [91m                                                                                             [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m588[0m:[93m98[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m588[0m           yesterday: { totalHours: number, average: number, completionRate: number, data: number[] }
[7m   [0m [91m                                                                                                 [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m590[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m590[0m           const getDateRange = (daysOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m598[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m598[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m600[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m600[0m           const getTimeBucket = (createdAt: Date) => {
[7m   [0m [91m                ~~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m609[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m609[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m611[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m611[0m           const processDay = async (daysOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m645[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m645[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m647[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m647[0m           return {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m650[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m650[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m653[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m653[0m         public async getEmployeeWeeklyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m653[0m:[93m16[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m653[0m         public async getEmployeeWeeklyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m653[0m:[93m64[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m653[0m         public async getEmployeeWeeklyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m                                                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m653[0m:[93m73[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m653[0m         public async getEmployeeWeeklyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m                                                                        ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m654[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m654[0m           thisWeek: { totalHours: number, average: number, completionRate: number, data: number[] },
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m655[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m655[0m           lastWeek: { totalHours: number, average: number, completionRate: number, data: number[] }
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m657[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m657[0m           const getWeekRange = (weeksOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m668[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m668[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m670[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m670[0m           const getDayIndex = (createdAt: Date) => {
[7m   [0m [91m                ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m674[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m674[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m676[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m676[0m           const processWeek = async (weeksOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m708[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m708[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m710[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m710[0m           return {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m713[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m713[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m716[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m716[0m         public async getEmployeeYearlyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m716[0m:[93m16[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m716[0m         public async getEmployeeYearlyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m716[0m:[93m64[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m716[0m         public async getEmployeeYearlyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m                                                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m716[0m:[93m73[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m716[0m         public async getEmployeeYearlyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m                                                                        ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m717[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m717[0m           thisYear: { totalHours: number, average: number, completionRate: number, data: number[] },
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m718[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m718[0m           lastYear: { totalHours: number, average: number, completionRate: number, data: number[] }
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m720[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m720[0m           const getYearRange = (yearOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m728[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m728[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m730[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m730[0m           const processYear = async (yearOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m765[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m765[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m767[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m767[0m           return {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m770[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m770[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m774[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m774[0m         public async calculateUtilization(employeeId: number): Promise<IUtilization> {
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m774[0m:[93m16[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m774[0m         public async calculateUtilization(employeeId: number): Promise<IUtilization> {
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m774[0m:[93m53[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m774[0m         public async calculateUtilization(employeeId: number): Promise<IUtilization> {
[7m   [0m [91m                                                    ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m774[0m:[93m62[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m774[0m         public async calculateUtilization(employeeId: number): Promise<IUtilization> {
[7m   [0m [91m                                                             ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m775[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m775[0m           try {
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m776[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m776[0m             const [tasks, allocations] = await Promise.all([
[7m   [0m [91m                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m788[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m788[0m             ]);
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m790[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m790[0m             const utilizationMap: {
[7m   [0m [91m                  ~~~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m790[0m:[93m33[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m790[0m             const utilizationMap: {
[7m   [0m [91m                                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m790[0m:[93m35[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m790[0m             const utilizationMap: {
[7m   [0m [91m                                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m791[0m:[93m20[0m - [91merror[0m[90m TS1005: [0m']' expected.

[7m791[0m               [year: number]: {
[7m   [0m [91m                   ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m791[0m:[93m28[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m791[0m               [year: number]: {
[7m   [0m [91m                           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m791[0m:[93m29[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m791[0m               [year: number]: {
[7m   [0m [91m                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m791[0m:[93m31[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m791[0m               [year: number]: {
[7m   [0m [91m                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m792[0m:[93m23[0m - [91merror[0m[90m TS1005: [0m']' expected.

[7m792[0m                 [month: string]: {
[7m   [0m [91m                      ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m792[0m:[93m31[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m792[0m                 [month: string]: {
[7m   [0m [91m                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m792[0m:[93m32[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m792[0m                 [month: string]: {
[7m   [0m [91m                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m792[0m:[93m34[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m792[0m                 [month: string]: {
[7m   [0m [91m                                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m793[0m:[93m24[0m - [91merror[0m[90m TS1005: [0m']' expected.

[7m793[0m                   [week: string]: { actual: number; allocated: number }
[7m   [0m [91m                       ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m793[0m:[93m32[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m793[0m                   [week: string]: { actual: number; allocated: number }
[7m   [0m [91m                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m793[0m:[93m33[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m793[0m                   [week: string]: { actual: number; allocated: number }
[7m   [0m [91m                                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m793[0m:[93m35[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m793[0m                   [week: string]: { actual: number; allocated: number }
[7m   [0m [91m                                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m793[0m:[93m51[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m793[0m                   [week: string]: { actual: number; allocated: number }
[7m   [0m [91m                                                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m795[0m:[93m15[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m795[0m               }
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m796[0m:[93m13[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m796[0m             } = {};
[7m   [0m [91m            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m796[0m:[93m15[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m796[0m             } = {};
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m858[0m:[93m11[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m858[0m           } catch (error) {
[7m   [0m [91m          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m858[0m:[93m13[0m - [91merror[0m[90m TS1005: [0m'try' expected.

[7m858[0m           } catch (error) {
[7m   [0m [91m            ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m861[0m:[93m9[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m861[0m         }
[7m   [0m [91m        ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m864[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m864[0m         private getWeekOfMonth(date: Date): number {
[7m   [0m [91m        ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m864[0m:[93m36[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m864[0m         private getWeekOfMonth(date: Date): number {
[7m   [0m [91m                                   ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m864[0m:[93m43[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m864[0m         private getWeekOfMonth(date: Date): number {
[7m   [0m [91m                                          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m864[0m:[93m45[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m864[0m         private getWeekOfMonth(date: Date): number {
[7m   [0m [91m                                            ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m871[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m871[0m         private getWeekDateRange(date: Date): { start: Date; end: Date } {
[7m   [0m [91m        ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m871[0m:[93m38[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m871[0m         private getWeekDateRange(date: Date): { start: Date; end: Date } {
[7m   [0m [91m                                     ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m871[0m:[93m45[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m871[0m         private getWeekDateRange(date: Date): { start: Date; end: Date } {
[7m   [0m [91m                                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m882[0m:[93m7[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m882[0m       }
[7m   [0m [91m      ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m871[0m:[93m38[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m871[0m         private getWeekDateRange(date: Date): { start: Date; end: Date } {
[7m   [0m [91m                                     ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m871[0m:[93m45[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m871[0m         private getWeekDateRange(date: Date): { start: Date; end: Date } {
[7m   [0m [91m                                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m882[0m:[93m7[0m - [91merror[0m[90m TS1128: [0mDeclaration or statement expected.

[7m882[0m       }
[7m   [0m [91m      ~[0m

TSError: ⨯ Unable to compile TypeScript:
[96msrc/repositories/task/task.repository.ts[0m:[93m131[0m:[93m1[0m - [91merror[0m[90m TS1068: [0mUnexpected token. A constructor, method, accessor, or property was expected.

[7m131[0m import { Op, Transaction } from "sequelize";
[7m   [0m [91m~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m133[0m:[93m1[0m - [91merror[0m[90m TS1128: [0mDeclaration or statement expected.

[7m133[0m public async approveTask(approvalData: ITaskModification): Promise<ITask> {
[7m   [0m [91m~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m133[0m:[93m8[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m133[0m public async approveTask(approvalData: ITaskModification): Promise<ITask> {
[7m   [0m [91m       ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m133[0m:[93m38[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m133[0m public async approveTask(approvalData: ITaskModification): Promise<ITask> {
[7m   [0m [91m                                     ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m133[0m:[93m58[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m133[0m public async approveTask(approvalData: ITaskModification): Promise<ITask> {
[7m   [0m [91m                                                         ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m136[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m136[0m     const transaction = await this.sequelize.transaction(); // Assuming 'this.sequelize' is your Sequelize instance
[7m   [0m [91m          ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m136[0m:[93m59[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m136[0m     const transaction = await this.sequelize.transaction(); // Assuming 'this.sequelize' is your Sequelize instance
[7m   [0m [91m                                                          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m138[0m:[93m9[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m138[0m     try {
[7m   [0m [91m        ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m139[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m139[0m         const task = await Task.findByPk(approvalData.taskId, {
[7m   [0m [91m              ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m146[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m146[0m         });
[7m   [0m [91m          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m148[0m:[93m13[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m148[0m         if (!task) {
[7m   [0m [91m            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m154[0m:[93m9[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m154[0m         await task.update({
[7m   [0m [91m        ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m154[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m154[0m         await task.update({
[7m   [0m [91m              ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m157[0m:[93m28[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m157[0m         }, { transaction });
[7m   [0m [91m                           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m159[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m159[0m         const allocation = task.allocation as AllocationModel;
[7m   [0m [91m              ~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m159[0m:[93m62[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m159[0m         const allocation = task.allocation as AllocationModel;
[7m   [0m [91m                                                             ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m160[0m:[93m13[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m160[0m         if (!allocation?.projectId || !allocation?.chargeOutRate) {
[7m   [0m [91m            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m160[0m:[93m24[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m160[0m         if (!allocation?.projectId || !allocation?.chargeOutRate) {
[7m   [0m [91m                       ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m160[0m:[93m36[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m160[0m         if (!allocation?.projectId || !allocation?.chargeOutRate) {
[7m   [0m [91m                                   ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m160[0m:[93m39[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m160[0m         if (!allocation?.projectId || !allocation?.chargeOutRate) {
[7m   [0m [91m                                      ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m160[0m:[93m50[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m160[0m         if (!allocation?.projectId || !allocation?.chargeOutRate) {
[7m   [0m [91m                                                 ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m166[0m:[93m9[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m166[0m         const actualHours = task.actualHours || 0;
[7m   [0m [91m        ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m166[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m166[0m         const actualHours = task.actualHours || 0;
[7m   [0m [91m              ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m166[0m:[93m50[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m166[0m         const actualHours = task.actualHours || 0;
[7m   [0m [91m                                                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m167[0m:[93m25[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m167[0m         if (actualHours <= 0) {
[7m   [0m [91m                        ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m167[0m:[93m28[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m167[0m         if (actualHours <= 0) {
[7m   [0m [91m                           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m173[0m:[93m9[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m173[0m         const project = await Project.findByPk(allocation.projectId, {
[7m   [0m [91m        ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m173[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m173[0m         const project = await Project.findByPk(allocation.projectId, {
[7m   [0m [91m              ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m176[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m176[0m         });
[7m   [0m [91m          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m178[0m:[93m13[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m178[0m         if (!project) {
[7m   [0m [91m            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m184[0m:[93m9[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m184[0m         const taskDate = new Date(task.taskDate);
[7m   [0m [91m        ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m184[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m184[0m         const taskDate = new Date(task.taskDate);
[7m   [0m [91m              ~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m184[0m:[93m49[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m184[0m         const taskDate = new Date(task.taskDate);
[7m   [0m [91m                                                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m185[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m185[0m         const monthKey = `${taskDate.getFullYear()}-${(taskDate.getMonth() + 1)
[7m   [0m [91m              ~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m186[0m:[93m43[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m186[0m             .toString().padStart(2, '0')}`;
[7m   [0m [91m                                          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m189[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m189[0m         const updatedCosts = project.estimatedCost || {};
[7m   [0m [91m              ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m189[0m:[93m57[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m189[0m         const updatedCosts = project.estimatedCost || {};
[7m   [0m [91m                                                        ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m190[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m190[0m         const costToAdd = actualHours * allocation.chargeOutRate;
[7m   [0m [91m              ~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m190[0m:[93m65[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m190[0m         const costToAdd = actualHours * allocation.chargeOutRate;
[7m   [0m [91m                                                                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m191[0m:[93m21[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m191[0m         updatedCosts[monthKey] = (updatedCosts[monthKey] || 0) + costToAdd;
[7m   [0m [91m                    ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m191[0m:[93m32[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m191[0m         updatedCosts[monthKey] = (updatedCosts[monthKey] || 0) + costToAdd;
[7m   [0m [91m                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m191[0m:[93m75[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m191[0m         updatedCosts[monthKey] = (updatedCosts[monthKey] || 0) + costToAdd;
[7m   [0m [91m                                                                          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m194[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m194[0m         await project.update({
[7m   [0m [91m              ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m196[0m:[93m28[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m196[0m         }, { transaction });
[7m   [0m [91m                           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m198[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m198[0m         await transaction.commit();
[7m   [0m [91m              ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m198[0m:[93m35[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m198[0m         await transaction.commit();
[7m   [0m [91m                                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m199[0m:[93m16[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m199[0m         return task.get({ plain: true });
[7m   [0m [91m               ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m199[0m:[93m41[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m199[0m         return task.get({ plain: true });
[7m   [0m [91m                                        ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m200[0m:[93m7[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m200[0m     } catch (error) {
[7m   [0m [91m      ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m205[0m:[93m5[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m205[0m     public async rejectTask(rejectionData : ITaskModification): Promise<ITask> {
[7m   [0m [91m    ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m205[0m:[93m12[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m205[0m     public async rejectTask(rejectionData : ITaskModification): Promise<ITask> {
[7m   [0m [91m           ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m205[0m:[93m43[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m205[0m     public async rejectTask(rejectionData : ITaskModification): Promise<ITask> {
[7m   [0m [91m                                          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m205[0m:[93m63[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m205[0m     public async rejectTask(rejectionData : ITaskModification): Promise<ITask> {
[7m   [0m [91m                                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m206[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m206[0m         const task = await Task.findByPk(rejectionData.taskId);
[7m   [0m [91m              ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m206[0m:[93m63[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m206[0m         const task = await Task.findByPk(rejectionData.taskId);
[7m   [0m [91m                                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m207[0m:[93m13[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m207[0m         if (!task) throw new Error("Task not found");
[7m   [0m [91m            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m207[0m:[93m20[0m - [91merror[0m[90m TS1005: [0m'{' expected.

[7m207[0m         if (!task) throw new Error("Task not found");
[7m   [0m [91m                   ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m207[0m:[93m26[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m207[0m         if (!task) throw new Error("Task not found");
[7m   [0m [91m                         ~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m207[0m:[93m53[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m207[0m         if (!task) throw new Error("Task not found");
[7m   [0m [91m                                                    ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m208[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m208[0m         await task.update({ status: 'rejected', reasonForRejection : rejectionData.reasonForRejection, modifiedBy : rejectionData.modifiedBy });
[7m   [0m [91m              ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m208[0m:[93m144[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m208[0m         await task.update({ status: 'rejected', reasonForRejection : rejectionData.reasonForRejection, modifiedBy : rejectionData.modifiedBy });
[7m   [0m [91m                                                                                                                                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m209[0m:[93m16[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m209[0m         return task.get({ plain: true });
[7m   [0m [91m               ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m209[0m:[93m41[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m209[0m         return task.get({ plain: true });
[7m   [0m [91m                                        ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m212[0m:[93m5[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m212[0m     public async getProjectHoursSummary(): Promise<IProjectsHours> {
[7m   [0m [91m    ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m212[0m:[93m12[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m212[0m     public async getProjectHoursSummary(): Promise<IProjectsHours> {
[7m   [0m [91m           ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m212[0m:[93m42[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m212[0m     public async getProjectHoursSummary(): Promise<IProjectsHours> {
[7m   [0m [91m                                         ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m213[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m213[0m         const result = await Task.findOne({
[7m   [0m [91m              ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m221[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m221[0m         });
[7m   [0m [91m          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m223[0m:[93m16[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m223[0m         return {
[7m   [0m [91m               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m228[0m:[93m10[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m228[0m         };
[7m   [0m [91m         ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m231[0m:[93m7[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m231[0m       public async getEmployeeProjectHoursSummary(employeeId: string): Promise<IProjectsHours> {
[7m   [0m [91m      ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m231[0m:[93m14[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m231[0m       public async getEmployeeProjectHoursSummary(employeeId: string): Promise<IProjectsHours> {
[7m   [0m [91m             ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m231[0m:[93m61[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m231[0m       public async getEmployeeProjectHoursSummary(employeeId: string): Promise<IProjectsHours> {
[7m   [0m [91m                                                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m231[0m:[93m70[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m231[0m       public async getEmployeeProjectHoursSummary(employeeId: string): Promise<IProjectsHours> {
[7m   [0m [91m                                                                     ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m232[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m232[0m         const result = await Task.findOne({
[7m   [0m [91m              ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m243[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m243[0m         });
[7m   [0m [91m          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m245[0m:[93m16[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m245[0m         return {
[7m   [0m [91m               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m250[0m:[93m10[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m250[0m         };
[7m   [0m [91m         ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m253[0m:[93m7[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m253[0m       public async getCurrentWeekHours(allocationId: number): Promise<EmployeeTimesheet[]> {
[7m   [0m [91m      ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m253[0m:[93m14[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m253[0m       public async getCurrentWeekHours(allocationId: number): Promise<EmployeeTimesheet[]> {
[7m   [0m [91m             ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m253[0m:[93m52[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m253[0m       public async getCurrentWeekHours(allocationId: number): Promise<EmployeeTimesheet[]> {
[7m   [0m [91m                                                   ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m253[0m:[93m61[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m253[0m       public async getCurrentWeekHours(allocationId: number): Promise<EmployeeTimesheet[]> {
[7m   [0m [91m                                                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m253[0m:[93m89[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m253[0m       public async getCurrentWeekHours(allocationId: number): Promise<EmployeeTimesheet[]> {
[7m   [0m [91m                                                                                        [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m254[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m254[0m         const { start, end } = this.getCurrentWeekDates();
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m254[0m:[93m58[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m254[0m         const { start, end } = this.getCurrentWeekDates();
[7m   [0m [91m                                                         ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m255[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m255[0m         const weekDays = this.generateWeekDays(start);
[7m   [0m [91m              ~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m255[0m:[93m54[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m255[0m         const weekDays = this.generateWeekDays(start);
[7m   [0m [91m                                                     ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m257[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m257[0m         const tasks = await Task.findAll({
[7m   [0m [91m              ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m267[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m267[0m         });
[7m   [0m [91m          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m269[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m269[0m         const employeesMap = new Map<number, EmployeeTimesheet>();
[7m   [0m [91m              ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m269[0m:[93m66[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m269[0m         const employeesMap = new Map<number, EmployeeTimesheet>();
[7m   [0m [91m                                                                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m271[0m:[93m14[0m - [91merror[0m[90m TS1359: [0mIdentifier expected. 'const' is a reserved word that cannot be used here.

[7m271[0m         for (const task of tasks) {
[7m   [0m [91m             ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m271[0m:[93m20[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m271[0m         for (const task of tasks) {
[7m   [0m [91m                   ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m271[0m:[93m25[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m271[0m         for (const task of tasks) {
[7m   [0m [91m                        ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m271[0m:[93m28[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m271[0m         for (const task of tasks) {
[7m   [0m [91m                           ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m293[0m:[93m9[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m293[0m         return Array.from(employeesMap.values());
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m293[0m:[93m16[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m293[0m         return Array.from(employeesMap.values());
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m293[0m:[93m49[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m293[0m         return Array.from(employeesMap.values());
[7m   [0m [91m                                                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m295[0m:[93m5[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m295[0m     private getCurrentWeekDates(): { start: Date; end: Date } {
[7m   [0m [91m    ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m295[0m:[93m34[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m295[0m     private getCurrentWeekDates(): { start: Date; end: Date } {
[7m   [0m [91m                                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m307[0m:[93m5[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m307[0m     private generateWeekDays(startDate: Date): string[] {
[7m   [0m [91m    ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m307[0m:[93m39[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m307[0m     private generateWeekDays(startDate: Date): string[] {
[7m   [0m [91m                                      ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m307[0m:[93m46[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m307[0m     private generateWeekDays(startDate: Date): string[] {
[7m   [0m [91m                                             ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m307[0m:[93m55[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m307[0m     private generateWeekDays(startDate: Date): string[] {
[7m   [0m [91m                                                      [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m307[0m:[93m57[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m307[0m     private generateWeekDays(startDate: Date): string[] {
[7m   [0m [91m                                                        ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m318[0m:[93m5[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m318[0m     private formatDate(date: Date): string {
[7m   [0m [91m    ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m318[0m:[93m28[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m318[0m     private formatDate(date: Date): string {
[7m   [0m [91m                           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m318[0m:[93m35[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m318[0m     private formatDate(date: Date): string {
[7m   [0m [91m                                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m318[0m:[93m37[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m318[0m     private formatDate(date: Date): string {
[7m   [0m [91m                                    ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m323[0m:[93m5[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m323[0m     public async getEmployeeMonthlyTasks(
[7m   [0m [91m    ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m323[0m:[93m12[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m323[0m     public async getEmployeeMonthlyTasks(
[7m   [0m [91m           ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m324[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m324[0m       allocationId: number,
[7m   [0m [91m                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m325[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m325[0m       employeeId: number,
[7m   [0m [91m                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m326[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m326[0m       year: number,
[7m   [0m [91m          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m327[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m327[0m       month: number
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m328[0m:[93m4[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m328[0m   ): Promise<MonthlyTasks> {
[7m   [0m [91m   ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m329[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m329[0m       try {
[7m   [0m [91m          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m330[0m:[93m15[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m330[0m           if (!allocationId || !employeeId || !year || !month) {
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m330[0m:[93m29[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m330[0m           if (!allocationId || !employeeId || !year || !month) {
[7m   [0m [91m                            ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m330[0m:[93m32[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m330[0m           if (!allocationId || !employeeId || !year || !month) {
[7m   [0m [91m                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m330[0m:[93m44[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m330[0m           if (!allocationId || !employeeId || !year || !month) {
[7m   [0m [91m                                           ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m330[0m:[93m47[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m330[0m           if (!allocationId || !employeeId || !year || !month) {
[7m   [0m [91m                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m330[0m:[93m53[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m330[0m           if (!allocationId || !employeeId || !year || !month) {
[7m   [0m [91m                                                    ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m330[0m:[93m56[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m330[0m           if (!allocationId || !employeeId || !year || !month) {
[7m   [0m [91m                                                       ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m334[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m334[0m           const employee = await Employee.findOne({
[7m   [0m [91m          ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m334[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m334[0m           const employee = await Employee.findOne({
[7m   [0m [91m                ~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m341[0m:[93m13[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m341[0m           });
[7m   [0m [91m            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m343[0m:[93m15[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m343[0m           if (!employee || !employee || employee.allAllocation.length === 0) {
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m343[0m:[93m25[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m343[0m           if (!employee || !employee || employee.allAllocation.length === 0) {
[7m   [0m [91m                        ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m343[0m:[93m28[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m343[0m           if (!employee || !employee || employee.allAllocation.length === 0) {
[7m   [0m [91m                           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m343[0m:[93m38[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m343[0m           if (!employee || !employee || employee.allAllocation.length === 0) {
[7m   [0m [91m                                     ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m343[0m:[93m49[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m343[0m           if (!employee || !employee || employee.allAllocation.length === 0) {
[7m   [0m [91m                                                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m343[0m:[93m76[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m343[0m           if (!employee || !employee || employee.allAllocation.length === 0) {
[7m   [0m [91m                                                                           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m343[0m:[93m78[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m343[0m           if (!employee || !employee || employee.allAllocation.length === 0) {
[7m   [0m [91m                                                                             ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m344[0m:[93m21[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m344[0m               throw new HttpException(404, 'Employee is not assigned to this project');
[7m   [0m [91m                    ~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m344[0m:[93m87[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m344[0m               throw new HttpException(404, 'Employee is not assigned to this project');
[7m   [0m [91m                                                                                      ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m347[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m347[0m           const projectAllocation = employee.allAllocation.find(a => a.id === allocationId);
[7m   [0m [91m          ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m347[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m347[0m           const projectAllocation = employee.allAllocation.find(a => a.id === allocationId);
[7m   [0m [91m                ~~~~~~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m347[0m:[93m92[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m347[0m           const projectAllocation = employee.allAllocation.find(a => a.id === allocationId);
[7m   [0m [91m                                                                                           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m348[0m:[93m15[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m348[0m           if (!projectAllocation) {
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m352[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m352[0m           const startDate = new Date(Date.UTC(year, month - 1, 1));
[7m   [0m [91m          ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m352[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m352[0m           const startDate = new Date(Date.UTC(year, month - 1, 1));
[7m   [0m [91m                ~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m352[0m:[93m67[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m352[0m           const startDate = new Date(Date.UTC(year, month - 1, 1));
[7m   [0m [91m                                                                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m353[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m353[0m           const endDate = new Date(Date.UTC(year, month, 0));
[7m   [0m [91m                ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m353[0m:[93m61[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m353[0m           const endDate = new Date(Date.UTC(year, month, 0));
[7m   [0m [91m                                                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m354[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m354[0m           endDate.setUTCHours(23, 59, 59, 999);
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m354[0m:[93m47[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m354[0m           endDate.setUTCHours(23, 59, 59, 999);
[7m   [0m [91m                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m356[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m356[0m           const tasks = await Task.findAll({
[7m   [0m [91m                ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m367[0m:[93m13[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m367[0m           });
[7m   [0m [91m            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m369[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m369[0m           const totalHours = tasks.reduce((sum, task) => sum + task.actualHours, 0);
[7m   [0m [91m                ~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m369[0m:[93m84[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m369[0m           const totalHours = tasks.reduce((sum, task) => sum + task.actualHours, 0);
[7m   [0m [91m                                                                                   ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m370[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m370[0m           const rate = Number(projectAllocation.chargeOutRate);
[7m   [0m [91m                ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m370[0m:[93m63[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m370[0m           const rate = Number(projectAllocation.chargeOutRate);
[7m   [0m [91m                                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m371[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m371[0m           const totalCost = totalHours * rate;
[7m   [0m [91m                ~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m371[0m:[93m46[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m371[0m           const totalCost = totalHours * rate;
[7m   [0m [91m                                             ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m373[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m373[0m           return {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m388[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m388[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m390[0m:[93m9[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m390[0m       } catch (error) {
[7m   [0m [91m        ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m394[0m:[93m3[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m394[0m   }
[7m   [0m [91m  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m396[0m:[93m3[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m396[0m   public async getTotalHoursByEmployee(employeeId: number): Promise<number> {
[7m   [0m [91m  ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m396[0m:[93m10[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m396[0m   public async getTotalHoursByEmployee(employeeId: number): Promise<number> {
[7m   [0m [91m         ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m396[0m:[93m50[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m396[0m   public async getTotalHoursByEmployee(employeeId: number): Promise<number> {
[7m   [0m [91m                                                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m396[0m:[93m59[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m396[0m   public async getTotalHoursByEmployee(employeeId: number): Promise<number> {
[7m   [0m [91m                                                          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m397[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m397[0m     const result = await Task.findOne({
[7m   [0m [91m          ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m403[0m:[93m7[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m403[0m     });
[7m   [0m [91m      ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m404[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m404[0m     return result?.actualHours || 0;
[7m   [0m [91m           ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m404[0m:[93m36[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m404[0m     return result?.actualHours || 0;
[7m   [0m [91m                                   ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m408[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m408[0m         public async getTaskTimeStatistics(): Promise<{
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m408[0m:[93m16[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m408[0m         public async getTaskTimeStatistics(): Promise<{
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m408[0m:[93m45[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m408[0m         public async getTaskTimeStatistics(): Promise<{
[7m   [0m [91m                                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m409[0m:[93m94[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m409[0m           today: { totalHours: number, average: number, completionRate: number, data: number[] },
[7m   [0m [91m                                                                                             [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m410[0m:[93m98[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m410[0m           yesterday: { totalHours: number, average: number, completionRate: number, data: number[] }
[7m   [0m [91m                                                                                                 [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m412[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m412[0m           const getDateRange = (daysOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m420[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m420[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m422[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m422[0m           const getTimeBucket = (createdAt: Date) => {
[7m   [0m [91m                ~~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m431[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m431[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m433[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m433[0m           const processDay = async (daysOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m464[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m464[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m466[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m466[0m           return {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m469[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m469[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m472[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m472[0m         public async getWeeklyTaskStatistics(): Promise<{
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m472[0m:[93m16[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m472[0m         public async getWeeklyTaskStatistics(): Promise<{
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m472[0m:[93m47[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m472[0m         public async getWeeklyTaskStatistics(): Promise<{
[7m   [0m [91m                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m473[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m473[0m           thisWeek: { totalHours: number, average: number, completionRate: number, data: number[] },
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m474[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m474[0m           lastWeek: { totalHours: number, average: number, completionRate: number, data: number[] }
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m476[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m476[0m           const getWeekRange = (weeksOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m487[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m487[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m489[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m489[0m           const getDayIndex = (createdAt: Date) => {
[7m   [0m [91m                ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m493[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m493[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m495[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m495[0m           const processWeek = async (weeksOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m524[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m524[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m526[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m526[0m           return {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m529[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m529[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m532[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m532[0m         public async getYearlyTaskStatistics(): Promise<{
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m532[0m:[93m16[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m532[0m         public async getYearlyTaskStatistics(): Promise<{
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m532[0m:[93m47[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m532[0m         public async getYearlyTaskStatistics(): Promise<{
[7m   [0m [91m                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m533[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m533[0m           thisYear: { totalHours: number, average: number, completionRate: number, data: number[] },
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m534[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m534[0m           lastYear: { totalHours: number, average: number, completionRate: number, data: number[] }
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m536[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m536[0m           const getYearRange = (yearOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m544[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m544[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m546[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m546[0m           const processYear = async (yearOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m578[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m578[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m580[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m580[0m           return {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m583[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m583[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m586[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m586[0m         public async getEmployeeTaskTimeStatistics(employeeId: number): Promise<{
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m586[0m:[93m16[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m586[0m         public async getEmployeeTaskTimeStatistics(employeeId: number): Promise<{
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m586[0m:[93m62[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m586[0m         public async getEmployeeTaskTimeStatistics(employeeId: number): Promise<{
[7m   [0m [91m                                                             ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m586[0m:[93m71[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m586[0m         public async getEmployeeTaskTimeStatistics(employeeId: number): Promise<{
[7m   [0m [91m                                                                      ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m587[0m:[93m94[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m587[0m           today: { totalHours: number, average: number, completionRate: number, data: number[] },
[7m   [0m [91m                                                                                             [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m588[0m:[93m98[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m588[0m           yesterday: { totalHours: number, average: number, completionRate: number, data: number[] }
[7m   [0m [91m                                                                                                 [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m590[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m590[0m           const getDateRange = (daysOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m598[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m598[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m600[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m600[0m           const getTimeBucket = (createdAt: Date) => {
[7m   [0m [91m                ~~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m609[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m609[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m611[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m611[0m           const processDay = async (daysOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m645[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m645[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m647[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m647[0m           return {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m650[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m650[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m653[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m653[0m         public async getEmployeeWeeklyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m653[0m:[93m16[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m653[0m         public async getEmployeeWeeklyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m653[0m:[93m64[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m653[0m         public async getEmployeeWeeklyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m                                                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m653[0m:[93m73[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m653[0m         public async getEmployeeWeeklyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m                                                                        ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m654[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m654[0m           thisWeek: { totalHours: number, average: number, completionRate: number, data: number[] },
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m655[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m655[0m           lastWeek: { totalHours: number, average: number, completionRate: number, data: number[] }
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m657[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m657[0m           const getWeekRange = (weeksOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m668[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m668[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m670[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m670[0m           const getDayIndex = (createdAt: Date) => {
[7m   [0m [91m                ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m674[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m674[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m676[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m676[0m           const processWeek = async (weeksOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m708[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m708[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m710[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m710[0m           return {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m713[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m713[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m716[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m716[0m         public async getEmployeeYearlyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m716[0m:[93m16[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m716[0m         public async getEmployeeYearlyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m716[0m:[93m64[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m716[0m         public async getEmployeeYearlyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m                                                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m716[0m:[93m73[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m716[0m         public async getEmployeeYearlyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m                                                                        ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m717[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m717[0m           thisYear: { totalHours: number, average: number, completionRate: number, data: number[] },
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m718[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m718[0m           lastYear: { totalHours: number, average: number, completionRate: number, data: number[] }
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m720[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m720[0m           const getYearRange = (yearOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m728[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m728[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m730[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m730[0m           const processYear = async (yearOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m765[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m765[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m767[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m767[0m           return {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m770[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m770[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m774[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m774[0m         public async calculateUtilization(employeeId: number): Promise<IUtilization> {
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m774[0m:[93m16[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m774[0m         public async calculateUtilization(employeeId: number): Promise<IUtilization> {
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m774[0m:[93m53[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m774[0m         public async calculateUtilization(employeeId: number): Promise<IUtilization> {
[7m   [0m [91m                                                    ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m774[0m:[93m62[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m774[0m         public async calculateUtilization(employeeId: number): Promise<IUtilization> {
[7m   [0m [91m                                                             ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m775[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m775[0m           try {
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m776[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m776[0m             const [tasks, allocations] = await Promise.all([
[7m   [0m [91m                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m788[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m788[0m             ]);
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m790[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m790[0m             const utilizationMap: {
[7m   [0m [91m                  ~~~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m790[0m:[93m33[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m790[0m             const utilizationMap: {
[7m   [0m [91m                                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m790[0m:[93m35[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m790[0m             const utilizationMap: {
[7m   [0m [91m                                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m791[0m:[93m20[0m - [91merror[0m[90m TS1005: [0m']' expected.

[7m791[0m               [year: number]: {
[7m   [0m [91m                   ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m791[0m:[93m28[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m791[0m               [year: number]: {
[7m   [0m [91m                           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m791[0m:[93m29[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m791[0m               [year: number]: {
[7m   [0m [91m                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m791[0m:[93m31[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m791[0m               [year: number]: {
[7m   [0m [91m                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m792[0m:[93m23[0m - [91merror[0m[90m TS1005: [0m']' expected.

[7m792[0m                 [month: string]: {
[7m   [0m [91m                      ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m792[0m:[93m31[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m792[0m                 [month: string]: {
[7m   [0m [91m                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m792[0m:[93m32[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m792[0m                 [month: string]: {
[7m   [0m [91m                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m792[0m:[93m34[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m792[0m                 [month: string]: {
[7m   [0m [91m                                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m793[0m:[93m24[0m - [91merror[0m[90m TS1005: [0m']' expected.

[7m793[0m                   [week: string]: { actual: number; allocated: number }
[7m   [0m [91m                       ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m793[0m:[93m32[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m793[0m                   [week: string]: { actual: number; allocated: number }
[7m   [0m [91m                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m793[0m:[93m33[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m793[0m                   [week: string]: { actual: number; allocated: number }
[7m   [0m [91m                                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m793[0m:[93m35[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m793[0m                   [week: string]: { actual: number; allocated: number }
[7m   [0m [91m                                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m793[0m:[93m51[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m793[0m                   [week: string]: { actual: number; allocated: number }
[7m   [0m [91m                                                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m795[0m:[93m15[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m795[0m               }
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m796[0m:[93m13[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m796[0m             } = {};
[7m   [0m [91m            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m796[0m:[93m15[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m796[0m             } = {};
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m858[0m:[93m11[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m858[0m           } catch (error) {
[7m   [0m [91m          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m858[0m:[93m13[0m - [91merror[0m[90m TS1005: [0m'try' expected.

[7m858[0m           } catch (error) {
[7m   [0m [91m            ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m861[0m:[93m9[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m861[0m         }
[7m   [0m [91m        ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m864[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m864[0m         private getWeekOfMonth(date: Date): number {
[7m   [0m [91m        ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m864[0m:[93m36[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m864[0m         private getWeekOfMonth(date: Date): number {
[7m   [0m [91m                                   ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m864[0m:[93m43[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m864[0m         private getWeekOfMonth(date: Date): number {
[7m   [0m [91m                                          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m864[0m:[93m45[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m864[0m         private getWeekOfMonth(date: Date): number {
[7m   [0m [91m                                            ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m871[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m871[0m         private getWeekDateRange(date: Date): { start: Date; end: Date } {
[7m   [0m [91m        ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m871[0m:[93m38[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m871[0m         private getWeekDateRange(date: Date): { start: Date; end: Date } {
[7m   [0m [91m                                     ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m871[0m:[93m45[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m871[0m         private getWeekDateRange(date: Date): { start: Date; end: Date } {
[7m   [0m [91m                                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m882[0m:[93m7[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m882[0m       }
[7m   [0m [91m      ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m871[0m:[93m38[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m871[0m         private getWeekDateRange(date: Date): { start: Date; end: Date } {
[7m   [0m [91m                                     ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m871[0m:[93m45[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m871[0m         private getWeekDateRange(date: Date): { start: Date; end: Date } {
[7m   [0m [91m                                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m882[0m:[93m7[0m - [91merror[0m[90m TS1128: [0mDeclaration or statement expected.

[7m882[0m       }
[7m   [0m [91m      ~[0m

    at createTSError (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:859:12)
    at reportTSError (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:863:19)
    at C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1379:34
    at Object.compile (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1458:13)
    at Module.m._compile (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1617:30)
    at node:internal/modules/cjs/loader:1689:10
    at Object.require.extensions.<computed> [as .ts] (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1621:12)
    at Module.load (node:internal/modules/cjs/loader:1318:32)
    at Function._load (node:internal/modules/cjs/loader:1128:12)
    at TracingChannel.traceSync (node:diagnostics_channel:315:14)
2025-04-22 11:55:35 error: uncaughtException: ⨯ Unable to compile TypeScript:
[96msrc/repositories/task/task.repository.ts[0m:[93m131[0m:[93m5[0m - [91merror[0m[90m TS1068: [0mUnexpected token. A constructor, method, accessor, or property was expected.

[7m131[0m     import { Op, Transaction } from "sequelize";
[7m   [0m [91m    ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m133[0m:[93m5[0m - [91merror[0m[90m TS1128: [0mDeclaration or statement expected.

[7m133[0m     public async approveTask(approvalData: ITaskModification): Promise<ITask> {
[7m   [0m [91m    ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m133[0m:[93m12[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m133[0m     public async approveTask(approvalData: ITaskModification): Promise<ITask> {
[7m   [0m [91m           ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m133[0m:[93m42[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m133[0m     public async approveTask(approvalData: ITaskModification): Promise<ITask> {
[7m   [0m [91m                                         ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m133[0m:[93m62[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m133[0m     public async approveTask(approvalData: ITaskModification): Promise<ITask> {
[7m   [0m [91m                                                             ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m136[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m136[0m         const transaction = await this.sequelize.transaction(); // Assuming 'this.sequelize' is your Sequelize instance
[7m   [0m [91m              ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m136[0m:[93m63[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m136[0m         const transaction = await this.sequelize.transaction(); // Assuming 'this.sequelize' is your Sequelize instance
[7m   [0m [91m                                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m138[0m:[93m13[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m138[0m         try {
[7m   [0m [91m            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m139[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m139[0m             const task = await Task.findByPk(approvalData.taskId, {
[7m   [0m [91m                  ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m146[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m146[0m             });
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m148[0m:[93m17[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m148[0m             if (!task) {
[7m   [0m [91m                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m154[0m:[93m13[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m154[0m             await task.update({
[7m   [0m [91m            ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m154[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m154[0m             await task.update({
[7m   [0m [91m                  ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m157[0m:[93m32[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m157[0m             }, { transaction });
[7m   [0m [91m                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m159[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m159[0m             const allocation = task.allocation as AllocationModel;
[7m   [0m [91m                  ~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m159[0m:[93m66[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m159[0m             const allocation = task.allocation as AllocationModel;
[7m   [0m [91m                                                                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m160[0m:[93m17[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m160[0m             if (!allocation?.projectId || !allocation?.chargeOutRate) {
[7m   [0m [91m                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m160[0m:[93m28[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m160[0m             if (!allocation?.projectId || !allocation?.chargeOutRate) {
[7m   [0m [91m                           ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m160[0m:[93m40[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m160[0m             if (!allocation?.projectId || !allocation?.chargeOutRate) {
[7m   [0m [91m                                       ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m160[0m:[93m43[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m160[0m             if (!allocation?.projectId || !allocation?.chargeOutRate) {
[7m   [0m [91m                                          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m160[0m:[93m54[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m160[0m             if (!allocation?.projectId || !allocation?.chargeOutRate) {
[7m   [0m [91m                                                     ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m166[0m:[93m13[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m166[0m             const actualHours = task.actualHours || 0;
[7m   [0m [91m            ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m166[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m166[0m             const actualHours = task.actualHours || 0;
[7m   [0m [91m                  ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m166[0m:[93m54[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m166[0m             const actualHours = task.actualHours || 0;
[7m   [0m [91m                                                     ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m167[0m:[93m29[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m167[0m             if (actualHours <= 0) {
[7m   [0m [91m                            ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m167[0m:[93m32[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m167[0m             if (actualHours <= 0) {
[7m   [0m [91m                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m173[0m:[93m13[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m173[0m             const project = await Project.findByPk(allocation.projectId, {
[7m   [0m [91m            ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m173[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m173[0m             const project = await Project.findByPk(allocation.projectId, {
[7m   [0m [91m                  ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m176[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m176[0m             });
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m178[0m:[93m17[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m178[0m             if (!project) {
[7m   [0m [91m                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m184[0m:[93m13[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m184[0m             const taskDate = new Date(task.taskDate);
[7m   [0m [91m            ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m184[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m184[0m             const taskDate = new Date(task.taskDate);
[7m   [0m [91m                  ~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m184[0m:[93m53[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m184[0m             const taskDate = new Date(task.taskDate);
[7m   [0m [91m                                                    ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m185[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m185[0m             const monthKey = `${taskDate.getFullYear()}-${(taskDate.getMonth() + 1)
[7m   [0m [91m                  ~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m186[0m:[93m47[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m186[0m                 .toString().padStart(2, '0')}`;
[7m   [0m [91m                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m189[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m189[0m             const updatedCosts = project.estimatedCost || {};
[7m   [0m [91m                  ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m189[0m:[93m61[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m189[0m             const updatedCosts = project.estimatedCost || {};
[7m   [0m [91m                                                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m190[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m190[0m             const costToAdd = actualHours * allocation.chargeOutRate;
[7m   [0m [91m                  ~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m190[0m:[93m69[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m190[0m             const costToAdd = actualHours * allocation.chargeOutRate;
[7m   [0m [91m                                                                    ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m191[0m:[93m25[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m191[0m             updatedCosts[monthKey] = (updatedCosts[monthKey] || 0) + costToAdd;
[7m   [0m [91m                        ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m191[0m:[93m36[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m191[0m             updatedCosts[monthKey] = (updatedCosts[monthKey] || 0) + costToAdd;
[7m   [0m [91m                                   ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m191[0m:[93m79[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m191[0m             updatedCosts[monthKey] = (updatedCosts[monthKey] || 0) + costToAdd;
[7m   [0m [91m                                                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m194[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m194[0m             await project.update({
[7m   [0m [91m                  ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m196[0m:[93m32[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m196[0m             }, { transaction });
[7m   [0m [91m                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m198[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m198[0m             await transaction.commit();
[7m   [0m [91m                  ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m198[0m:[93m39[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m198[0m             await transaction.commit();
[7m   [0m [91m                                      ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m199[0m:[93m20[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m199[0m             return task.get({ plain: true });
[7m   [0m [91m                   ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m199[0m:[93m45[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m199[0m             return task.get({ plain: true });
[7m   [0m [91m                                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m200[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m200[0m         } catch (error) {
[7m   [0m [91m          ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m205[0m:[93m5[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m205[0m     public async rejectTask(rejectionData : ITaskModification): Promise<ITask> {
[7m   [0m [91m    ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m205[0m:[93m12[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m205[0m     public async rejectTask(rejectionData : ITaskModification): Promise<ITask> {
[7m   [0m [91m           ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m205[0m:[93m43[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m205[0m     public async rejectTask(rejectionData : ITaskModification): Promise<ITask> {
[7m   [0m [91m                                          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m205[0m:[93m63[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m205[0m     public async rejectTask(rejectionData : ITaskModification): Promise<ITask> {
[7m   [0m [91m                                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m206[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m206[0m         const task = await Task.findByPk(rejectionData.taskId);
[7m   [0m [91m              ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m206[0m:[93m63[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m206[0m         const task = await Task.findByPk(rejectionData.taskId);
[7m   [0m [91m                                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m207[0m:[93m13[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m207[0m         if (!task) throw new Error("Task not found");
[7m   [0m [91m            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m207[0m:[93m20[0m - [91merror[0m[90m TS1005: [0m'{' expected.

[7m207[0m         if (!task) throw new Error("Task not found");
[7m   [0m [91m                   ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m207[0m:[93m26[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m207[0m         if (!task) throw new Error("Task not found");
[7m   [0m [91m                         ~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m207[0m:[93m53[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m207[0m         if (!task) throw new Error("Task not found");
[7m   [0m [91m                                                    ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m208[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m208[0m         await task.update({ status: 'rejected', reasonForRejection : rejectionData.reasonForRejection, modifiedBy : rejectionData.modifiedBy });
[7m   [0m [91m              ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m208[0m:[93m144[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m208[0m         await task.update({ status: 'rejected', reasonForRejection : rejectionData.reasonForRejection, modifiedBy : rejectionData.modifiedBy });
[7m   [0m [91m                                                                                                                                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m209[0m:[93m16[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m209[0m         return task.get({ plain: true });
[7m   [0m [91m               ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m209[0m:[93m41[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m209[0m         return task.get({ plain: true });
[7m   [0m [91m                                        ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m212[0m:[93m5[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m212[0m     public async getProjectHoursSummary(): Promise<IProjectsHours> {
[7m   [0m [91m    ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m212[0m:[93m12[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m212[0m     public async getProjectHoursSummary(): Promise<IProjectsHours> {
[7m   [0m [91m           ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m212[0m:[93m42[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m212[0m     public async getProjectHoursSummary(): Promise<IProjectsHours> {
[7m   [0m [91m                                         ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m213[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m213[0m         const result = await Task.findOne({
[7m   [0m [91m              ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m221[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m221[0m         });
[7m   [0m [91m          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m223[0m:[93m16[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m223[0m         return {
[7m   [0m [91m               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m228[0m:[93m10[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m228[0m         };
[7m   [0m [91m         ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m231[0m:[93m7[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m231[0m       public async getEmployeeProjectHoursSummary(employeeId: string): Promise<IProjectsHours> {
[7m   [0m [91m      ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m231[0m:[93m14[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m231[0m       public async getEmployeeProjectHoursSummary(employeeId: string): Promise<IProjectsHours> {
[7m   [0m [91m             ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m231[0m:[93m61[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m231[0m       public async getEmployeeProjectHoursSummary(employeeId: string): Promise<IProjectsHours> {
[7m   [0m [91m                                                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m231[0m:[93m70[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m231[0m       public async getEmployeeProjectHoursSummary(employeeId: string): Promise<IProjectsHours> {
[7m   [0m [91m                                                                     ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m232[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m232[0m         const result = await Task.findOne({
[7m   [0m [91m              ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m243[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m243[0m         });
[7m   [0m [91m          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m245[0m:[93m16[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m245[0m         return {
[7m   [0m [91m               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m250[0m:[93m10[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m250[0m         };
[7m   [0m [91m         ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m253[0m:[93m7[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m253[0m       public async getCurrentWeekHours(allocationId: number): Promise<EmployeeTimesheet[]> {
[7m   [0m [91m      ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m253[0m:[93m14[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m253[0m       public async getCurrentWeekHours(allocationId: number): Promise<EmployeeTimesheet[]> {
[7m   [0m [91m             ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m253[0m:[93m52[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m253[0m       public async getCurrentWeekHours(allocationId: number): Promise<EmployeeTimesheet[]> {
[7m   [0m [91m                                                   ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m253[0m:[93m61[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m253[0m       public async getCurrentWeekHours(allocationId: number): Promise<EmployeeTimesheet[]> {
[7m   [0m [91m                                                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m253[0m:[93m89[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m253[0m       public async getCurrentWeekHours(allocationId: number): Promise<EmployeeTimesheet[]> {
[7m   [0m [91m                                                                                        [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m254[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m254[0m         const { start, end } = this.getCurrentWeekDates();
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m254[0m:[93m58[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m254[0m         const { start, end } = this.getCurrentWeekDates();
[7m   [0m [91m                                                         ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m255[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m255[0m         const weekDays = this.generateWeekDays(start);
[7m   [0m [91m              ~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m255[0m:[93m54[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m255[0m         const weekDays = this.generateWeekDays(start);
[7m   [0m [91m                                                     ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m257[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m257[0m         const tasks = await Task.findAll({
[7m   [0m [91m              ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m267[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m267[0m         });
[7m   [0m [91m          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m269[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m269[0m         const employeesMap = new Map<number, EmployeeTimesheet>();
[7m   [0m [91m              ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m269[0m:[93m66[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m269[0m         const employeesMap = new Map<number, EmployeeTimesheet>();
[7m   [0m [91m                                                                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m271[0m:[93m14[0m - [91merror[0m[90m TS1359: [0mIdentifier expected. 'const' is a reserved word that cannot be used here.

[7m271[0m         for (const task of tasks) {
[7m   [0m [91m             ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m271[0m:[93m20[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m271[0m         for (const task of tasks) {
[7m   [0m [91m                   ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m271[0m:[93m25[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m271[0m         for (const task of tasks) {
[7m   [0m [91m                        ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m271[0m:[93m28[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m271[0m         for (const task of tasks) {
[7m   [0m [91m                           ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m293[0m:[93m9[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m293[0m         return Array.from(employeesMap.values());
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m293[0m:[93m16[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m293[0m         return Array.from(employeesMap.values());
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m293[0m:[93m49[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m293[0m         return Array.from(employeesMap.values());
[7m   [0m [91m                                                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m295[0m:[93m5[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m295[0m     private getCurrentWeekDates(): { start: Date; end: Date } {
[7m   [0m [91m    ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m295[0m:[93m34[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m295[0m     private getCurrentWeekDates(): { start: Date; end: Date } {
[7m   [0m [91m                                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m307[0m:[93m5[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m307[0m     private generateWeekDays(startDate: Date): string[] {
[7m   [0m [91m    ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m307[0m:[93m39[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m307[0m     private generateWeekDays(startDate: Date): string[] {
[7m   [0m [91m                                      ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m307[0m:[93m46[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m307[0m     private generateWeekDays(startDate: Date): string[] {
[7m   [0m [91m                                             ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m307[0m:[93m55[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m307[0m     private generateWeekDays(startDate: Date): string[] {
[7m   [0m [91m                                                      [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m307[0m:[93m57[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m307[0m     private generateWeekDays(startDate: Date): string[] {
[7m   [0m [91m                                                        ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m318[0m:[93m5[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m318[0m     private formatDate(date: Date): string {
[7m   [0m [91m    ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m318[0m:[93m28[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m318[0m     private formatDate(date: Date): string {
[7m   [0m [91m                           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m318[0m:[93m35[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m318[0m     private formatDate(date: Date): string {
[7m   [0m [91m                                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m318[0m:[93m37[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m318[0m     private formatDate(date: Date): string {
[7m   [0m [91m                                    ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m323[0m:[93m5[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m323[0m     public async getEmployeeMonthlyTasks(
[7m   [0m [91m    ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m323[0m:[93m12[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m323[0m     public async getEmployeeMonthlyTasks(
[7m   [0m [91m           ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m324[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m324[0m       allocationId: number,
[7m   [0m [91m                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m325[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m325[0m       employeeId: number,
[7m   [0m [91m                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m326[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m326[0m       year: number,
[7m   [0m [91m          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m327[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m327[0m       month: number
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m328[0m:[93m4[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m328[0m   ): Promise<MonthlyTasks> {
[7m   [0m [91m   ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m329[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m329[0m       try {
[7m   [0m [91m          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m330[0m:[93m15[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m330[0m           if (!allocationId || !employeeId || !year || !month) {
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m330[0m:[93m29[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m330[0m           if (!allocationId || !employeeId || !year || !month) {
[7m   [0m [91m                            ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m330[0m:[93m32[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m330[0m           if (!allocationId || !employeeId || !year || !month) {
[7m   [0m [91m                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m330[0m:[93m44[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m330[0m           if (!allocationId || !employeeId || !year || !month) {
[7m   [0m [91m                                           ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m330[0m:[93m47[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m330[0m           if (!allocationId || !employeeId || !year || !month) {
[7m   [0m [91m                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m330[0m:[93m53[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m330[0m           if (!allocationId || !employeeId || !year || !month) {
[7m   [0m [91m                                                    ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m330[0m:[93m56[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m330[0m           if (!allocationId || !employeeId || !year || !month) {
[7m   [0m [91m                                                       ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m334[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m334[0m           const employee = await Employee.findOne({
[7m   [0m [91m          ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m334[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m334[0m           const employee = await Employee.findOne({
[7m   [0m [91m                ~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m341[0m:[93m13[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m341[0m           });
[7m   [0m [91m            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m343[0m:[93m15[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m343[0m           if (!employee || !employee || employee.allAllocation.length === 0) {
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m343[0m:[93m25[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m343[0m           if (!employee || !employee || employee.allAllocation.length === 0) {
[7m   [0m [91m                        ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m343[0m:[93m28[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m343[0m           if (!employee || !employee || employee.allAllocation.length === 0) {
[7m   [0m [91m                           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m343[0m:[93m38[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m343[0m           if (!employee || !employee || employee.allAllocation.length === 0) {
[7m   [0m [91m                                     ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m343[0m:[93m49[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m343[0m           if (!employee || !employee || employee.allAllocation.length === 0) {
[7m   [0m [91m                                                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m343[0m:[93m76[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m343[0m           if (!employee || !employee || employee.allAllocation.length === 0) {
[7m   [0m [91m                                                                           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m343[0m:[93m78[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m343[0m           if (!employee || !employee || employee.allAllocation.length === 0) {
[7m   [0m [91m                                                                             ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m344[0m:[93m21[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m344[0m               throw new HttpException(404, 'Employee is not assigned to this project');
[7m   [0m [91m                    ~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m344[0m:[93m87[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m344[0m               throw new HttpException(404, 'Employee is not assigned to this project');
[7m   [0m [91m                                                                                      ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m347[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m347[0m           const projectAllocation = employee.allAllocation.find(a => a.id === allocationId);
[7m   [0m [91m          ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m347[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m347[0m           const projectAllocation = employee.allAllocation.find(a => a.id === allocationId);
[7m   [0m [91m                ~~~~~~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m347[0m:[93m92[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m347[0m           const projectAllocation = employee.allAllocation.find(a => a.id === allocationId);
[7m   [0m [91m                                                                                           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m348[0m:[93m15[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m348[0m           if (!projectAllocation) {
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m352[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m352[0m           const startDate = new Date(Date.UTC(year, month - 1, 1));
[7m   [0m [91m          ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m352[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m352[0m           const startDate = new Date(Date.UTC(year, month - 1, 1));
[7m   [0m [91m                ~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m352[0m:[93m67[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m352[0m           const startDate = new Date(Date.UTC(year, month - 1, 1));
[7m   [0m [91m                                                                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m353[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m353[0m           const endDate = new Date(Date.UTC(year, month, 0));
[7m   [0m [91m                ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m353[0m:[93m61[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m353[0m           const endDate = new Date(Date.UTC(year, month, 0));
[7m   [0m [91m                                                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m354[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m354[0m           endDate.setUTCHours(23, 59, 59, 999);
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m354[0m:[93m47[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m354[0m           endDate.setUTCHours(23, 59, 59, 999);
[7m   [0m [91m                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m356[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m356[0m           const tasks = await Task.findAll({
[7m   [0m [91m                ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m367[0m:[93m13[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m367[0m           });
[7m   [0m [91m            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m369[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m369[0m           const totalHours = tasks.reduce((sum, task) => sum + task.actualHours, 0);
[7m   [0m [91m                ~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m369[0m:[93m84[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m369[0m           const totalHours = tasks.reduce((sum, task) => sum + task.actualHours, 0);
[7m   [0m [91m                                                                                   ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m370[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m370[0m           const rate = Number(projectAllocation.chargeOutRate);
[7m   [0m [91m                ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m370[0m:[93m63[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m370[0m           const rate = Number(projectAllocation.chargeOutRate);
[7m   [0m [91m                                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m371[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m371[0m           const totalCost = totalHours * rate;
[7m   [0m [91m                ~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m371[0m:[93m46[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m371[0m           const totalCost = totalHours * rate;
[7m   [0m [91m                                             ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m373[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m373[0m           return {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m388[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m388[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m390[0m:[93m9[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m390[0m       } catch (error) {
[7m   [0m [91m        ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m394[0m:[93m3[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m394[0m   }
[7m   [0m [91m  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m396[0m:[93m3[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m396[0m   public async getTotalHoursByEmployee(employeeId: number): Promise<number> {
[7m   [0m [91m  ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m396[0m:[93m10[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m396[0m   public async getTotalHoursByEmployee(employeeId: number): Promise<number> {
[7m   [0m [91m         ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m396[0m:[93m50[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m396[0m   public async getTotalHoursByEmployee(employeeId: number): Promise<number> {
[7m   [0m [91m                                                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m396[0m:[93m59[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m396[0m   public async getTotalHoursByEmployee(employeeId: number): Promise<number> {
[7m   [0m [91m                                                          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m397[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m397[0m     const result = await Task.findOne({
[7m   [0m [91m          ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m403[0m:[93m7[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m403[0m     });
[7m   [0m [91m      ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m404[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m404[0m     return result?.actualHours || 0;
[7m   [0m [91m           ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m404[0m:[93m36[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m404[0m     return result?.actualHours || 0;
[7m   [0m [91m                                   ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m408[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m408[0m         public async getTaskTimeStatistics(): Promise<{
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m408[0m:[93m16[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m408[0m         public async getTaskTimeStatistics(): Promise<{
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m408[0m:[93m45[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m408[0m         public async getTaskTimeStatistics(): Promise<{
[7m   [0m [91m                                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m409[0m:[93m94[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m409[0m           today: { totalHours: number, average: number, completionRate: number, data: number[] },
[7m   [0m [91m                                                                                             [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m410[0m:[93m98[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m410[0m           yesterday: { totalHours: number, average: number, completionRate: number, data: number[] }
[7m   [0m [91m                                                                                                 [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m412[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m412[0m           const getDateRange = (daysOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m420[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m420[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m422[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m422[0m           const getTimeBucket = (createdAt: Date) => {
[7m   [0m [91m                ~~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m431[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m431[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m433[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m433[0m           const processDay = async (daysOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m464[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m464[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m466[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m466[0m           return {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m469[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m469[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m472[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m472[0m         public async getWeeklyTaskStatistics(): Promise<{
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m472[0m:[93m16[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m472[0m         public async getWeeklyTaskStatistics(): Promise<{
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m472[0m:[93m47[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m472[0m         public async getWeeklyTaskStatistics(): Promise<{
[7m   [0m [91m                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m473[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m473[0m           thisWeek: { totalHours: number, average: number, completionRate: number, data: number[] },
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m474[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m474[0m           lastWeek: { totalHours: number, average: number, completionRate: number, data: number[] }
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m476[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m476[0m           const getWeekRange = (weeksOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m487[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m487[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m489[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m489[0m           const getDayIndex = (createdAt: Date) => {
[7m   [0m [91m                ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m493[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m493[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m495[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m495[0m           const processWeek = async (weeksOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m524[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m524[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m526[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m526[0m           return {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m529[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m529[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m532[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m532[0m         public async getYearlyTaskStatistics(): Promise<{
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m532[0m:[93m16[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m532[0m         public async getYearlyTaskStatistics(): Promise<{
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m532[0m:[93m47[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m532[0m         public async getYearlyTaskStatistics(): Promise<{
[7m   [0m [91m                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m533[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m533[0m           thisYear: { totalHours: number, average: number, completionRate: number, data: number[] },
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m534[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m534[0m           lastYear: { totalHours: number, average: number, completionRate: number, data: number[] }
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m536[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m536[0m           const getYearRange = (yearOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m544[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m544[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m546[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m546[0m           const processYear = async (yearOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m578[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m578[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m580[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m580[0m           return {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m583[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m583[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m586[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m586[0m         public async getEmployeeTaskTimeStatistics(employeeId: number): Promise<{
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m586[0m:[93m16[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m586[0m         public async getEmployeeTaskTimeStatistics(employeeId: number): Promise<{
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m586[0m:[93m62[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m586[0m         public async getEmployeeTaskTimeStatistics(employeeId: number): Promise<{
[7m   [0m [91m                                                             ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m586[0m:[93m71[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m586[0m         public async getEmployeeTaskTimeStatistics(employeeId: number): Promise<{
[7m   [0m [91m                                                                      ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m587[0m:[93m94[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m587[0m           today: { totalHours: number, average: number, completionRate: number, data: number[] },
[7m   [0m [91m                                                                                             [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m588[0m:[93m98[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m588[0m           yesterday: { totalHours: number, average: number, completionRate: number, data: number[] }
[7m   [0m [91m                                                                                                 [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m590[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m590[0m           const getDateRange = (daysOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m598[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m598[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m600[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m600[0m           const getTimeBucket = (createdAt: Date) => {
[7m   [0m [91m                ~~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m609[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m609[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m611[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m611[0m           const processDay = async (daysOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m645[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m645[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m647[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m647[0m           return {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m650[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m650[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m653[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m653[0m         public async getEmployeeWeeklyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m653[0m:[93m16[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m653[0m         public async getEmployeeWeeklyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m653[0m:[93m64[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m653[0m         public async getEmployeeWeeklyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m                                                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m653[0m:[93m73[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m653[0m         public async getEmployeeWeeklyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m                                                                        ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m654[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m654[0m           thisWeek: { totalHours: number, average: number, completionRate: number, data: number[] },
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m655[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m655[0m           lastWeek: { totalHours: number, average: number, completionRate: number, data: number[] }
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m657[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m657[0m           const getWeekRange = (weeksOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m668[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m668[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m670[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m670[0m           const getDayIndex = (createdAt: Date) => {
[7m   [0m [91m                ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m674[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m674[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m676[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m676[0m           const processWeek = async (weeksOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m708[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m708[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m710[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m710[0m           return {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m713[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m713[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m716[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m716[0m         public async getEmployeeYearlyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m716[0m:[93m16[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m716[0m         public async getEmployeeYearlyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m716[0m:[93m64[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m716[0m         public async getEmployeeYearlyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m                                                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m716[0m:[93m73[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m716[0m         public async getEmployeeYearlyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m                                                                        ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m717[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m717[0m           thisYear: { totalHours: number, average: number, completionRate: number, data: number[] },
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m718[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m718[0m           lastYear: { totalHours: number, average: number, completionRate: number, data: number[] }
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m720[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m720[0m           const getYearRange = (yearOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m728[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m728[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m730[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m730[0m           const processYear = async (yearOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m765[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m765[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m767[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m767[0m           return {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m770[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m770[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m774[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m774[0m         public async calculateUtilization(employeeId: number): Promise<IUtilization> {
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m774[0m:[93m16[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m774[0m         public async calculateUtilization(employeeId: number): Promise<IUtilization> {
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m774[0m:[93m53[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m774[0m         public async calculateUtilization(employeeId: number): Promise<IUtilization> {
[7m   [0m [91m                                                    ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m774[0m:[93m62[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m774[0m         public async calculateUtilization(employeeId: number): Promise<IUtilization> {
[7m   [0m [91m                                                             ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m775[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m775[0m           try {
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m776[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m776[0m             const [tasks, allocations] = await Promise.all([
[7m   [0m [91m                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m788[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m788[0m             ]);
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m790[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m790[0m             const utilizationMap: {
[7m   [0m [91m                  ~~~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m790[0m:[93m33[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m790[0m             const utilizationMap: {
[7m   [0m [91m                                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m790[0m:[93m35[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m790[0m             const utilizationMap: {
[7m   [0m [91m                                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m791[0m:[93m20[0m - [91merror[0m[90m TS1005: [0m']' expected.

[7m791[0m               [year: number]: {
[7m   [0m [91m                   ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m791[0m:[93m28[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m791[0m               [year: number]: {
[7m   [0m [91m                           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m791[0m:[93m29[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m791[0m               [year: number]: {
[7m   [0m [91m                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m791[0m:[93m31[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m791[0m               [year: number]: {
[7m   [0m [91m                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m792[0m:[93m23[0m - [91merror[0m[90m TS1005: [0m']' expected.

[7m792[0m                 [month: string]: {
[7m   [0m [91m                      ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m792[0m:[93m31[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m792[0m                 [month: string]: {
[7m   [0m [91m                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m792[0m:[93m32[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m792[0m                 [month: string]: {
[7m   [0m [91m                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m792[0m:[93m34[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m792[0m                 [month: string]: {
[7m   [0m [91m                                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m793[0m:[93m24[0m - [91merror[0m[90m TS1005: [0m']' expected.

[7m793[0m                   [week: string]: { actual: number; allocated: number }
[7m   [0m [91m                       ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m793[0m:[93m32[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m793[0m                   [week: string]: { actual: number; allocated: number }
[7m   [0m [91m                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m793[0m:[93m33[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m793[0m                   [week: string]: { actual: number; allocated: number }
[7m   [0m [91m                                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m793[0m:[93m35[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m793[0m                   [week: string]: { actual: number; allocated: number }
[7m   [0m [91m                                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m793[0m:[93m51[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m793[0m                   [week: string]: { actual: number; allocated: number }
[7m   [0m [91m                                                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m795[0m:[93m15[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m795[0m               }
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m796[0m:[93m13[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m796[0m             } = {};
[7m   [0m [91m            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m796[0m:[93m15[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m796[0m             } = {};
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m858[0m:[93m11[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m858[0m           } catch (error) {
[7m   [0m [91m          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m858[0m:[93m13[0m - [91merror[0m[90m TS1005: [0m'try' expected.

[7m858[0m           } catch (error) {
[7m   [0m [91m            ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m861[0m:[93m9[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m861[0m         }
[7m   [0m [91m        ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m864[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m864[0m         private getWeekOfMonth(date: Date): number {
[7m   [0m [91m        ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m864[0m:[93m36[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m864[0m         private getWeekOfMonth(date: Date): number {
[7m   [0m [91m                                   ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m864[0m:[93m43[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m864[0m         private getWeekOfMonth(date: Date): number {
[7m   [0m [91m                                          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m864[0m:[93m45[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m864[0m         private getWeekOfMonth(date: Date): number {
[7m   [0m [91m                                            ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m871[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m871[0m         private getWeekDateRange(date: Date): { start: Date; end: Date } {
[7m   [0m [91m        ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m871[0m:[93m38[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m871[0m         private getWeekDateRange(date: Date): { start: Date; end: Date } {
[7m   [0m [91m                                     ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m871[0m:[93m45[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m871[0m         private getWeekDateRange(date: Date): { start: Date; end: Date } {
[7m   [0m [91m                                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m882[0m:[93m7[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m882[0m       }
[7m   [0m [91m      ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m871[0m:[93m38[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m871[0m         private getWeekDateRange(date: Date): { start: Date; end: Date } {
[7m   [0m [91m                                     ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m871[0m:[93m45[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m871[0m         private getWeekDateRange(date: Date): { start: Date; end: Date } {
[7m   [0m [91m                                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m882[0m:[93m7[0m - [91merror[0m[90m TS1128: [0mDeclaration or statement expected.

[7m882[0m       }
[7m   [0m [91m      ~[0m

TSError: ⨯ Unable to compile TypeScript:
[96msrc/repositories/task/task.repository.ts[0m:[93m131[0m:[93m5[0m - [91merror[0m[90m TS1068: [0mUnexpected token. A constructor, method, accessor, or property was expected.

[7m131[0m     import { Op, Transaction } from "sequelize";
[7m   [0m [91m    ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m133[0m:[93m5[0m - [91merror[0m[90m TS1128: [0mDeclaration or statement expected.

[7m133[0m     public async approveTask(approvalData: ITaskModification): Promise<ITask> {
[7m   [0m [91m    ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m133[0m:[93m12[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m133[0m     public async approveTask(approvalData: ITaskModification): Promise<ITask> {
[7m   [0m [91m           ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m133[0m:[93m42[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m133[0m     public async approveTask(approvalData: ITaskModification): Promise<ITask> {
[7m   [0m [91m                                         ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m133[0m:[93m62[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m133[0m     public async approveTask(approvalData: ITaskModification): Promise<ITask> {
[7m   [0m [91m                                                             ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m136[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m136[0m         const transaction = await this.sequelize.transaction(); // Assuming 'this.sequelize' is your Sequelize instance
[7m   [0m [91m              ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m136[0m:[93m63[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m136[0m         const transaction = await this.sequelize.transaction(); // Assuming 'this.sequelize' is your Sequelize instance
[7m   [0m [91m                                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m138[0m:[93m13[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m138[0m         try {
[7m   [0m [91m            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m139[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m139[0m             const task = await Task.findByPk(approvalData.taskId, {
[7m   [0m [91m                  ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m146[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m146[0m             });
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m148[0m:[93m17[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m148[0m             if (!task) {
[7m   [0m [91m                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m154[0m:[93m13[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m154[0m             await task.update({
[7m   [0m [91m            ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m154[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m154[0m             await task.update({
[7m   [0m [91m                  ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m157[0m:[93m32[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m157[0m             }, { transaction });
[7m   [0m [91m                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m159[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m159[0m             const allocation = task.allocation as AllocationModel;
[7m   [0m [91m                  ~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m159[0m:[93m66[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m159[0m             const allocation = task.allocation as AllocationModel;
[7m   [0m [91m                                                                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m160[0m:[93m17[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m160[0m             if (!allocation?.projectId || !allocation?.chargeOutRate) {
[7m   [0m [91m                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m160[0m:[93m28[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m160[0m             if (!allocation?.projectId || !allocation?.chargeOutRate) {
[7m   [0m [91m                           ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m160[0m:[93m40[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m160[0m             if (!allocation?.projectId || !allocation?.chargeOutRate) {
[7m   [0m [91m                                       ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m160[0m:[93m43[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m160[0m             if (!allocation?.projectId || !allocation?.chargeOutRate) {
[7m   [0m [91m                                          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m160[0m:[93m54[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m160[0m             if (!allocation?.projectId || !allocation?.chargeOutRate) {
[7m   [0m [91m                                                     ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m166[0m:[93m13[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m166[0m             const actualHours = task.actualHours || 0;
[7m   [0m [91m            ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m166[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m166[0m             const actualHours = task.actualHours || 0;
[7m   [0m [91m                  ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m166[0m:[93m54[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m166[0m             const actualHours = task.actualHours || 0;
[7m   [0m [91m                                                     ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m167[0m:[93m29[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m167[0m             if (actualHours <= 0) {
[7m   [0m [91m                            ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m167[0m:[93m32[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m167[0m             if (actualHours <= 0) {
[7m   [0m [91m                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m173[0m:[93m13[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m173[0m             const project = await Project.findByPk(allocation.projectId, {
[7m   [0m [91m            ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m173[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m173[0m             const project = await Project.findByPk(allocation.projectId, {
[7m   [0m [91m                  ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m176[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m176[0m             });
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m178[0m:[93m17[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m178[0m             if (!project) {
[7m   [0m [91m                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m184[0m:[93m13[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m184[0m             const taskDate = new Date(task.taskDate);
[7m   [0m [91m            ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m184[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m184[0m             const taskDate = new Date(task.taskDate);
[7m   [0m [91m                  ~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m184[0m:[93m53[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m184[0m             const taskDate = new Date(task.taskDate);
[7m   [0m [91m                                                    ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m185[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m185[0m             const monthKey = `${taskDate.getFullYear()}-${(taskDate.getMonth() + 1)
[7m   [0m [91m                  ~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m186[0m:[93m47[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m186[0m                 .toString().padStart(2, '0')}`;
[7m   [0m [91m                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m189[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m189[0m             const updatedCosts = project.estimatedCost || {};
[7m   [0m [91m                  ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m189[0m:[93m61[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m189[0m             const updatedCosts = project.estimatedCost || {};
[7m   [0m [91m                                                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m190[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m190[0m             const costToAdd = actualHours * allocation.chargeOutRate;
[7m   [0m [91m                  ~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m190[0m:[93m69[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m190[0m             const costToAdd = actualHours * allocation.chargeOutRate;
[7m   [0m [91m                                                                    ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m191[0m:[93m25[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m191[0m             updatedCosts[monthKey] = (updatedCosts[monthKey] || 0) + costToAdd;
[7m   [0m [91m                        ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m191[0m:[93m36[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m191[0m             updatedCosts[monthKey] = (updatedCosts[monthKey] || 0) + costToAdd;
[7m   [0m [91m                                   ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m191[0m:[93m79[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m191[0m             updatedCosts[monthKey] = (updatedCosts[monthKey] || 0) + costToAdd;
[7m   [0m [91m                                                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m194[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m194[0m             await project.update({
[7m   [0m [91m                  ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m196[0m:[93m32[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m196[0m             }, { transaction });
[7m   [0m [91m                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m198[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m198[0m             await transaction.commit();
[7m   [0m [91m                  ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m198[0m:[93m39[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m198[0m             await transaction.commit();
[7m   [0m [91m                                      ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m199[0m:[93m20[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m199[0m             return task.get({ plain: true });
[7m   [0m [91m                   ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m199[0m:[93m45[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m199[0m             return task.get({ plain: true });
[7m   [0m [91m                                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m200[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m200[0m         } catch (error) {
[7m   [0m [91m          ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m205[0m:[93m5[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m205[0m     public async rejectTask(rejectionData : ITaskModification): Promise<ITask> {
[7m   [0m [91m    ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m205[0m:[93m12[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m205[0m     public async rejectTask(rejectionData : ITaskModification): Promise<ITask> {
[7m   [0m [91m           ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m205[0m:[93m43[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m205[0m     public async rejectTask(rejectionData : ITaskModification): Promise<ITask> {
[7m   [0m [91m                                          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m205[0m:[93m63[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m205[0m     public async rejectTask(rejectionData : ITaskModification): Promise<ITask> {
[7m   [0m [91m                                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m206[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m206[0m         const task = await Task.findByPk(rejectionData.taskId);
[7m   [0m [91m              ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m206[0m:[93m63[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m206[0m         const task = await Task.findByPk(rejectionData.taskId);
[7m   [0m [91m                                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m207[0m:[93m13[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m207[0m         if (!task) throw new Error("Task not found");
[7m   [0m [91m            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m207[0m:[93m20[0m - [91merror[0m[90m TS1005: [0m'{' expected.

[7m207[0m         if (!task) throw new Error("Task not found");
[7m   [0m [91m                   ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m207[0m:[93m26[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m207[0m         if (!task) throw new Error("Task not found");
[7m   [0m [91m                         ~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m207[0m:[93m53[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m207[0m         if (!task) throw new Error("Task not found");
[7m   [0m [91m                                                    ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m208[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m208[0m         await task.update({ status: 'rejected', reasonForRejection : rejectionData.reasonForRejection, modifiedBy : rejectionData.modifiedBy });
[7m   [0m [91m              ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m208[0m:[93m144[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m208[0m         await task.update({ status: 'rejected', reasonForRejection : rejectionData.reasonForRejection, modifiedBy : rejectionData.modifiedBy });
[7m   [0m [91m                                                                                                                                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m209[0m:[93m16[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m209[0m         return task.get({ plain: true });
[7m   [0m [91m               ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m209[0m:[93m41[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m209[0m         return task.get({ plain: true });
[7m   [0m [91m                                        ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m212[0m:[93m5[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m212[0m     public async getProjectHoursSummary(): Promise<IProjectsHours> {
[7m   [0m [91m    ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m212[0m:[93m12[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m212[0m     public async getProjectHoursSummary(): Promise<IProjectsHours> {
[7m   [0m [91m           ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m212[0m:[93m42[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m212[0m     public async getProjectHoursSummary(): Promise<IProjectsHours> {
[7m   [0m [91m                                         ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m213[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m213[0m         const result = await Task.findOne({
[7m   [0m [91m              ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m221[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m221[0m         });
[7m   [0m [91m          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m223[0m:[93m16[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m223[0m         return {
[7m   [0m [91m               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m228[0m:[93m10[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m228[0m         };
[7m   [0m [91m         ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m231[0m:[93m7[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m231[0m       public async getEmployeeProjectHoursSummary(employeeId: string): Promise<IProjectsHours> {
[7m   [0m [91m      ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m231[0m:[93m14[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m231[0m       public async getEmployeeProjectHoursSummary(employeeId: string): Promise<IProjectsHours> {
[7m   [0m [91m             ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m231[0m:[93m61[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m231[0m       public async getEmployeeProjectHoursSummary(employeeId: string): Promise<IProjectsHours> {
[7m   [0m [91m                                                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m231[0m:[93m70[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m231[0m       public async getEmployeeProjectHoursSummary(employeeId: string): Promise<IProjectsHours> {
[7m   [0m [91m                                                                     ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m232[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m232[0m         const result = await Task.findOne({
[7m   [0m [91m              ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m243[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m243[0m         });
[7m   [0m [91m          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m245[0m:[93m16[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m245[0m         return {
[7m   [0m [91m               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m250[0m:[93m10[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m250[0m         };
[7m   [0m [91m         ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m253[0m:[93m7[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m253[0m       public async getCurrentWeekHours(allocationId: number): Promise<EmployeeTimesheet[]> {
[7m   [0m [91m      ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m253[0m:[93m14[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m253[0m       public async getCurrentWeekHours(allocationId: number): Promise<EmployeeTimesheet[]> {
[7m   [0m [91m             ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m253[0m:[93m52[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m253[0m       public async getCurrentWeekHours(allocationId: number): Promise<EmployeeTimesheet[]> {
[7m   [0m [91m                                                   ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m253[0m:[93m61[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m253[0m       public async getCurrentWeekHours(allocationId: number): Promise<EmployeeTimesheet[]> {
[7m   [0m [91m                                                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m253[0m:[93m89[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m253[0m       public async getCurrentWeekHours(allocationId: number): Promise<EmployeeTimesheet[]> {
[7m   [0m [91m                                                                                        [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m254[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m254[0m         const { start, end } = this.getCurrentWeekDates();
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m254[0m:[93m58[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m254[0m         const { start, end } = this.getCurrentWeekDates();
[7m   [0m [91m                                                         ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m255[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m255[0m         const weekDays = this.generateWeekDays(start);
[7m   [0m [91m              ~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m255[0m:[93m54[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m255[0m         const weekDays = this.generateWeekDays(start);
[7m   [0m [91m                                                     ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m257[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m257[0m         const tasks = await Task.findAll({
[7m   [0m [91m              ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m267[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m267[0m         });
[7m   [0m [91m          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m269[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m269[0m         const employeesMap = new Map<number, EmployeeTimesheet>();
[7m   [0m [91m              ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m269[0m:[93m66[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m269[0m         const employeesMap = new Map<number, EmployeeTimesheet>();
[7m   [0m [91m                                                                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m271[0m:[93m14[0m - [91merror[0m[90m TS1359: [0mIdentifier expected. 'const' is a reserved word that cannot be used here.

[7m271[0m         for (const task of tasks) {
[7m   [0m [91m             ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m271[0m:[93m20[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m271[0m         for (const task of tasks) {
[7m   [0m [91m                   ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m271[0m:[93m25[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m271[0m         for (const task of tasks) {
[7m   [0m [91m                        ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m271[0m:[93m28[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m271[0m         for (const task of tasks) {
[7m   [0m [91m                           ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m293[0m:[93m9[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m293[0m         return Array.from(employeesMap.values());
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m293[0m:[93m16[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m293[0m         return Array.from(employeesMap.values());
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m293[0m:[93m49[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m293[0m         return Array.from(employeesMap.values());
[7m   [0m [91m                                                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m295[0m:[93m5[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m295[0m     private getCurrentWeekDates(): { start: Date; end: Date } {
[7m   [0m [91m    ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m295[0m:[93m34[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m295[0m     private getCurrentWeekDates(): { start: Date; end: Date } {
[7m   [0m [91m                                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m307[0m:[93m5[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m307[0m     private generateWeekDays(startDate: Date): string[] {
[7m   [0m [91m    ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m307[0m:[93m39[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m307[0m     private generateWeekDays(startDate: Date): string[] {
[7m   [0m [91m                                      ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m307[0m:[93m46[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m307[0m     private generateWeekDays(startDate: Date): string[] {
[7m   [0m [91m                                             ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m307[0m:[93m55[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m307[0m     private generateWeekDays(startDate: Date): string[] {
[7m   [0m [91m                                                      [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m307[0m:[93m57[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m307[0m     private generateWeekDays(startDate: Date): string[] {
[7m   [0m [91m                                                        ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m318[0m:[93m5[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m318[0m     private formatDate(date: Date): string {
[7m   [0m [91m    ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m318[0m:[93m28[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m318[0m     private formatDate(date: Date): string {
[7m   [0m [91m                           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m318[0m:[93m35[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m318[0m     private formatDate(date: Date): string {
[7m   [0m [91m                                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m318[0m:[93m37[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m318[0m     private formatDate(date: Date): string {
[7m   [0m [91m                                    ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m323[0m:[93m5[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m323[0m     public async getEmployeeMonthlyTasks(
[7m   [0m [91m    ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m323[0m:[93m12[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m323[0m     public async getEmployeeMonthlyTasks(
[7m   [0m [91m           ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m324[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m324[0m       allocationId: number,
[7m   [0m [91m                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m325[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m325[0m       employeeId: number,
[7m   [0m [91m                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m326[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m326[0m       year: number,
[7m   [0m [91m          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m327[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m327[0m       month: number
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m328[0m:[93m4[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m328[0m   ): Promise<MonthlyTasks> {
[7m   [0m [91m   ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m329[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m329[0m       try {
[7m   [0m [91m          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m330[0m:[93m15[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m330[0m           if (!allocationId || !employeeId || !year || !month) {
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m330[0m:[93m29[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m330[0m           if (!allocationId || !employeeId || !year || !month) {
[7m   [0m [91m                            ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m330[0m:[93m32[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m330[0m           if (!allocationId || !employeeId || !year || !month) {
[7m   [0m [91m                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m330[0m:[93m44[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m330[0m           if (!allocationId || !employeeId || !year || !month) {
[7m   [0m [91m                                           ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m330[0m:[93m47[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m330[0m           if (!allocationId || !employeeId || !year || !month) {
[7m   [0m [91m                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m330[0m:[93m53[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m330[0m           if (!allocationId || !employeeId || !year || !month) {
[7m   [0m [91m                                                    ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m330[0m:[93m56[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m330[0m           if (!allocationId || !employeeId || !year || !month) {
[7m   [0m [91m                                                       ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m334[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m334[0m           const employee = await Employee.findOne({
[7m   [0m [91m          ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m334[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m334[0m           const employee = await Employee.findOne({
[7m   [0m [91m                ~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m341[0m:[93m13[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m341[0m           });
[7m   [0m [91m            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m343[0m:[93m15[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m343[0m           if (!employee || !employee || employee.allAllocation.length === 0) {
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m343[0m:[93m25[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m343[0m           if (!employee || !employee || employee.allAllocation.length === 0) {
[7m   [0m [91m                        ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m343[0m:[93m28[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m343[0m           if (!employee || !employee || employee.allAllocation.length === 0) {
[7m   [0m [91m                           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m343[0m:[93m38[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m343[0m           if (!employee || !employee || employee.allAllocation.length === 0) {
[7m   [0m [91m                                     ~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m343[0m:[93m49[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m343[0m           if (!employee || !employee || employee.allAllocation.length === 0) {
[7m   [0m [91m                                                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m343[0m:[93m76[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m343[0m           if (!employee || !employee || employee.allAllocation.length === 0) {
[7m   [0m [91m                                                                           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m343[0m:[93m78[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m343[0m           if (!employee || !employee || employee.allAllocation.length === 0) {
[7m   [0m [91m                                                                             ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m344[0m:[93m21[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m344[0m               throw new HttpException(404, 'Employee is not assigned to this project');
[7m   [0m [91m                    ~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m344[0m:[93m87[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m344[0m               throw new HttpException(404, 'Employee is not assigned to this project');
[7m   [0m [91m                                                                                      ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m347[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m347[0m           const projectAllocation = employee.allAllocation.find(a => a.id === allocationId);
[7m   [0m [91m          ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m347[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m347[0m           const projectAllocation = employee.allAllocation.find(a => a.id === allocationId);
[7m   [0m [91m                ~~~~~~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m347[0m:[93m92[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m347[0m           const projectAllocation = employee.allAllocation.find(a => a.id === allocationId);
[7m   [0m [91m                                                                                           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m348[0m:[93m15[0m - [91merror[0m[90m TS1003: [0mIdentifier expected.

[7m348[0m           if (!projectAllocation) {
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m352[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m352[0m           const startDate = new Date(Date.UTC(year, month - 1, 1));
[7m   [0m [91m          ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m352[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m352[0m           const startDate = new Date(Date.UTC(year, month - 1, 1));
[7m   [0m [91m                ~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m352[0m:[93m67[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m352[0m           const startDate = new Date(Date.UTC(year, month - 1, 1));
[7m   [0m [91m                                                                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m353[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m353[0m           const endDate = new Date(Date.UTC(year, month, 0));
[7m   [0m [91m                ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m353[0m:[93m61[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m353[0m           const endDate = new Date(Date.UTC(year, month, 0));
[7m   [0m [91m                                                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m354[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m354[0m           endDate.setUTCHours(23, 59, 59, 999);
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m354[0m:[93m47[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m354[0m           endDate.setUTCHours(23, 59, 59, 999);
[7m   [0m [91m                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m356[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m356[0m           const tasks = await Task.findAll({
[7m   [0m [91m                ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m367[0m:[93m13[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m367[0m           });
[7m   [0m [91m            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m369[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m369[0m           const totalHours = tasks.reduce((sum, task) => sum + task.actualHours, 0);
[7m   [0m [91m                ~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m369[0m:[93m84[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m369[0m           const totalHours = tasks.reduce((sum, task) => sum + task.actualHours, 0);
[7m   [0m [91m                                                                                   ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m370[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m370[0m           const rate = Number(projectAllocation.chargeOutRate);
[7m   [0m [91m                ~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m370[0m:[93m63[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m370[0m           const rate = Number(projectAllocation.chargeOutRate);
[7m   [0m [91m                                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m371[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m371[0m           const totalCost = totalHours * rate;
[7m   [0m [91m                ~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m371[0m:[93m46[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m371[0m           const totalCost = totalHours * rate;
[7m   [0m [91m                                             ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m373[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m373[0m           return {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m388[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m388[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m390[0m:[93m9[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m390[0m       } catch (error) {
[7m   [0m [91m        ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m394[0m:[93m3[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m394[0m   }
[7m   [0m [91m  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m396[0m:[93m3[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m396[0m   public async getTotalHoursByEmployee(employeeId: number): Promise<number> {
[7m   [0m [91m  ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m396[0m:[93m10[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m396[0m   public async getTotalHoursByEmployee(employeeId: number): Promise<number> {
[7m   [0m [91m         ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m396[0m:[93m50[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m396[0m   public async getTotalHoursByEmployee(employeeId: number): Promise<number> {
[7m   [0m [91m                                                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m396[0m:[93m59[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m396[0m   public async getTotalHoursByEmployee(employeeId: number): Promise<number> {
[7m   [0m [91m                                                          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m397[0m:[93m11[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m397[0m     const result = await Task.findOne({
[7m   [0m [91m          ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m403[0m:[93m7[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m403[0m     });
[7m   [0m [91m      ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m404[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m404[0m     return result?.actualHours || 0;
[7m   [0m [91m           ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m404[0m:[93m36[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m404[0m     return result?.actualHours || 0;
[7m   [0m [91m                                   ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m408[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m408[0m         public async getTaskTimeStatistics(): Promise<{
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m408[0m:[93m16[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m408[0m         public async getTaskTimeStatistics(): Promise<{
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m408[0m:[93m45[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m408[0m         public async getTaskTimeStatistics(): Promise<{
[7m   [0m [91m                                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m409[0m:[93m94[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m409[0m           today: { totalHours: number, average: number, completionRate: number, data: number[] },
[7m   [0m [91m                                                                                             [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m410[0m:[93m98[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m410[0m           yesterday: { totalHours: number, average: number, completionRate: number, data: number[] }
[7m   [0m [91m                                                                                                 [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m412[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m412[0m           const getDateRange = (daysOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m420[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m420[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m422[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m422[0m           const getTimeBucket = (createdAt: Date) => {
[7m   [0m [91m                ~~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m431[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m431[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m433[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m433[0m           const processDay = async (daysOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m464[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m464[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m466[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m466[0m           return {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m469[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m469[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m472[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m472[0m         public async getWeeklyTaskStatistics(): Promise<{
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m472[0m:[93m16[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m472[0m         public async getWeeklyTaskStatistics(): Promise<{
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m472[0m:[93m47[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m472[0m         public async getWeeklyTaskStatistics(): Promise<{
[7m   [0m [91m                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m473[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m473[0m           thisWeek: { totalHours: number, average: number, completionRate: number, data: number[] },
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m474[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m474[0m           lastWeek: { totalHours: number, average: number, completionRate: number, data: number[] }
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m476[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m476[0m           const getWeekRange = (weeksOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m487[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m487[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m489[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m489[0m           const getDayIndex = (createdAt: Date) => {
[7m   [0m [91m                ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m493[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m493[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m495[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m495[0m           const processWeek = async (weeksOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m524[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m524[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m526[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m526[0m           return {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m529[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m529[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m532[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m532[0m         public async getYearlyTaskStatistics(): Promise<{
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m532[0m:[93m16[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m532[0m         public async getYearlyTaskStatistics(): Promise<{
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m532[0m:[93m47[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m532[0m         public async getYearlyTaskStatistics(): Promise<{
[7m   [0m [91m                                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m533[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m533[0m           thisYear: { totalHours: number, average: number, completionRate: number, data: number[] },
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m534[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m534[0m           lastYear: { totalHours: number, average: number, completionRate: number, data: number[] }
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m536[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m536[0m           const getYearRange = (yearOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m544[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m544[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m546[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m546[0m           const processYear = async (yearOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m578[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m578[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m580[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m580[0m           return {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m583[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m583[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m586[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m586[0m         public async getEmployeeTaskTimeStatistics(employeeId: number): Promise<{
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m586[0m:[93m16[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m586[0m         public async getEmployeeTaskTimeStatistics(employeeId: number): Promise<{
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m586[0m:[93m62[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m586[0m         public async getEmployeeTaskTimeStatistics(employeeId: number): Promise<{
[7m   [0m [91m                                                             ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m586[0m:[93m71[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m586[0m         public async getEmployeeTaskTimeStatistics(employeeId: number): Promise<{
[7m   [0m [91m                                                                      ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m587[0m:[93m94[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m587[0m           today: { totalHours: number, average: number, completionRate: number, data: number[] },
[7m   [0m [91m                                                                                             [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m588[0m:[93m98[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m588[0m           yesterday: { totalHours: number, average: number, completionRate: number, data: number[] }
[7m   [0m [91m                                                                                                 [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m590[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m590[0m           const getDateRange = (daysOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m598[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m598[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m600[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m600[0m           const getTimeBucket = (createdAt: Date) => {
[7m   [0m [91m                ~~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m609[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m609[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m611[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m611[0m           const processDay = async (daysOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m645[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m645[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m647[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m647[0m           return {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m650[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m650[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m653[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m653[0m         public async getEmployeeWeeklyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m653[0m:[93m16[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m653[0m         public async getEmployeeWeeklyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m653[0m:[93m64[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m653[0m         public async getEmployeeWeeklyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m                                                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m653[0m:[93m73[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m653[0m         public async getEmployeeWeeklyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m                                                                        ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m654[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m654[0m           thisWeek: { totalHours: number, average: number, completionRate: number, data: number[] },
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m655[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m655[0m           lastWeek: { totalHours: number, average: number, completionRate: number, data: number[] }
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m657[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m657[0m           const getWeekRange = (weeksOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m668[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m668[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m670[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m670[0m           const getDayIndex = (createdAt: Date) => {
[7m   [0m [91m                ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m674[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m674[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m676[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m676[0m           const processWeek = async (weeksOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m708[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m708[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m710[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m710[0m           return {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m713[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m713[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m716[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m716[0m         public async getEmployeeYearlyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m716[0m:[93m16[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m716[0m         public async getEmployeeYearlyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m716[0m:[93m64[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m716[0m         public async getEmployeeYearlyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m                                                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m716[0m:[93m73[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m716[0m         public async getEmployeeYearlyTaskStatistics(employeeId: number): Promise<{
[7m   [0m [91m                                                                        ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m717[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m717[0m           thisYear: { totalHours: number, average: number, completionRate: number, data: number[] },
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m718[0m:[93m97[0m - [91merror[0m[90m TS1011: [0mAn element access expression should take an argument.

[7m718[0m           lastYear: { totalHours: number, average: number, completionRate: number, data: number[] }
[7m   [0m [91m                                                                                                [0m
[96msrc/repositories/task/task.repository.ts[0m:[93m720[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m720[0m           const getYearRange = (yearOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m728[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m728[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m730[0m:[93m17[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m730[0m           const processYear = async (yearOffset: number) => {
[7m   [0m [91m                ~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m765[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m765[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m767[0m:[93m18[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m767[0m           return {
[7m   [0m [91m                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m770[0m:[93m12[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m770[0m           };
[7m   [0m [91m           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m774[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m774[0m         public async calculateUtilization(employeeId: number): Promise<IUtilization> {
[7m   [0m [91m        ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m774[0m:[93m16[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m774[0m         public async calculateUtilization(employeeId: number): Promise<IUtilization> {
[7m   [0m [91m               ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m774[0m:[93m53[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m774[0m         public async calculateUtilization(employeeId: number): Promise<IUtilization> {
[7m   [0m [91m                                                    ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m774[0m:[93m62[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m774[0m         public async calculateUtilization(employeeId: number): Promise<IUtilization> {
[7m   [0m [91m                                                             ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m775[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m775[0m           try {
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m776[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m776[0m             const [tasks, allocations] = await Promise.all([
[7m   [0m [91m                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m788[0m:[93m15[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m788[0m             ]);
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m790[0m:[93m19[0m - [91merror[0m[90m TS1005: [0m':' expected.

[7m790[0m             const utilizationMap: {
[7m   [0m [91m                  ~~~~~~~~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m790[0m:[93m33[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m790[0m             const utilizationMap: {
[7m   [0m [91m                                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m790[0m:[93m35[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m790[0m             const utilizationMap: {
[7m   [0m [91m                                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m791[0m:[93m20[0m - [91merror[0m[90m TS1005: [0m']' expected.

[7m791[0m               [year: number]: {
[7m   [0m [91m                   ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m791[0m:[93m28[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m791[0m               [year: number]: {
[7m   [0m [91m                           ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m791[0m:[93m29[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m791[0m               [year: number]: {
[7m   [0m [91m                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m791[0m:[93m31[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m791[0m               [year: number]: {
[7m   [0m [91m                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m792[0m:[93m23[0m - [91merror[0m[90m TS1005: [0m']' expected.

[7m792[0m                 [month: string]: {
[7m   [0m [91m                      ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m792[0m:[93m31[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m792[0m                 [month: string]: {
[7m   [0m [91m                              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m792[0m:[93m32[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m792[0m                 [month: string]: {
[7m   [0m [91m                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m792[0m:[93m34[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m792[0m                 [month: string]: {
[7m   [0m [91m                                 ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m793[0m:[93m24[0m - [91merror[0m[90m TS1005: [0m']' expected.

[7m793[0m                   [week: string]: { actual: number; allocated: number }
[7m   [0m [91m                       ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m793[0m:[93m32[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m793[0m                   [week: string]: { actual: number; allocated: number }
[7m   [0m [91m                               ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m793[0m:[93m33[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m793[0m                   [week: string]: { actual: number; allocated: number }
[7m   [0m [91m                                ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m793[0m:[93m35[0m - [91merror[0m[90m TS1136: [0mProperty assignment expected.

[7m793[0m                   [week: string]: { actual: number; allocated: number }
[7m   [0m [91m                                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m793[0m:[93m51[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m793[0m                   [week: string]: { actual: number; allocated: number }
[7m   [0m [91m                                                  ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m795[0m:[93m15[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m795[0m               }
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m796[0m:[93m13[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m796[0m             } = {};
[7m   [0m [91m            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m796[0m:[93m15[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m796[0m             } = {};
[7m   [0m [91m              ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m858[0m:[93m11[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m858[0m           } catch (error) {
[7m   [0m [91m          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m858[0m:[93m13[0m - [91merror[0m[90m TS1005: [0m'try' expected.

[7m858[0m           } catch (error) {
[7m   [0m [91m            ~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m861[0m:[93m9[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m861[0m         }
[7m   [0m [91m        ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m864[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m864[0m         private getWeekOfMonth(date: Date): number {
[7m   [0m [91m        ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m864[0m:[93m36[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m864[0m         private getWeekOfMonth(date: Date): number {
[7m   [0m [91m                                   ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m864[0m:[93m43[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m864[0m         private getWeekOfMonth(date: Date): number {
[7m   [0m [91m                                          ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m864[0m:[93m45[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m864[0m         private getWeekOfMonth(date: Date): number {
[7m   [0m [91m                                            ~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m871[0m:[93m9[0m - [91merror[0m[90m TS1434: [0mUnexpected keyword or identifier.

[7m871[0m         private getWeekDateRange(date: Date): { start: Date; end: Date } {
[7m   [0m [91m        ~~~~~~~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m871[0m:[93m38[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m871[0m         private getWeekDateRange(date: Date): { start: Date; end: Date } {
[7m   [0m [91m                                     ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m871[0m:[93m45[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m871[0m         private getWeekDateRange(date: Date): { start: Date; end: Date } {
[7m   [0m [91m                                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m882[0m:[93m7[0m - [91merror[0m[90m TS1109: [0mExpression expected.

[7m882[0m       }
[7m   [0m [91m      ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m871[0m:[93m38[0m - [91merror[0m[90m TS1005: [0m',' expected.

[7m871[0m         private getWeekDateRange(date: Date): { start: Date; end: Date } {
[7m   [0m [91m                                     ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m871[0m:[93m45[0m - [91merror[0m[90m TS1005: [0m';' expected.

[7m871[0m         private getWeekDateRange(date: Date): { start: Date; end: Date } {
[7m   [0m [91m                                            ~[0m
[96msrc/repositories/task/task.repository.ts[0m:[93m882[0m:[93m7[0m - [91merror[0m[90m TS1128: [0mDeclaration or statement expected.

[7m882[0m       }
[7m   [0m [91m      ~[0m

    at createTSError (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:859:12)
    at reportTSError (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:863:19)
    at C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1379:34
    at Object.compile (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1458:13)
    at Module.m._compile (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1617:30)
    at node:internal/modules/cjs/loader:1689:10
    at Object.require.extensions.<computed> [as .ts] (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1621:12)
    at Module.load (node:internal/modules/cjs/loader:1318:32)
    at Function._load (node:internal/modules/cjs/loader:1128:12)
    at TracingChannel.traceSync (node:diagnostics_channel:315:14)
2025-04-22 11:56:10 error: [POST] /api/auth/login >> StatusCode:: 400, Message:: Invalid password
2025-04-22 11:56:41 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 11:56:41 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 11:56:42 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 11:56:42 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 11:57:13 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 11:57:14 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 11:57:25 error: [POST] /api/tasks/approveTask >> StatusCode:: 500, Message:: Error approving task: Cannot read properties of undefined (reading 'transaction')
2025-04-22 11:57:26 error: [POST] /api/tasks/approveTask >> StatusCode:: 500, Message:: Error approving task: Cannot read properties of undefined (reading 'transaction')
2025-04-22 11:57:37 error: [POST] /api/tasks/approveTask >> StatusCode:: 500, Message:: Error approving task: Cannot read properties of undefined (reading 'transaction')
2025-04-22 11:59:15 error: uncaughtException: Identifier 'transaction' has already been declared
C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\src\repositories\task\task.repository.ts:105
        const transaction = await allocation_model_1.default.sequelize.transaction();
              ^

SyntaxError: Identifier 'transaction' has already been declared
    at wrapSafe (node:internal/modules/cjs/loader:1469:18)
    at Module._compile (node:internal/modules/cjs/loader:1491:20)
    at Module.m._compile (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1618:23)
    at node:internal/modules/cjs/loader:1689:10
    at Object.require.extensions.<computed> [as .ts] (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1621:12)
    at Module.load (node:internal/modules/cjs/loader:1318:32)
    at Function._load (node:internal/modules/cjs/loader:1128:12)
    at TracingChannel.traceSync (node:diagnostics_channel:315:14)
    at wrapModuleLoad (node:internal/modules/cjs/loader:218:24)
    at Module.require (node:internal/modules/cjs/loader:1340:12)
2025-04-22 11:59:21 error: uncaughtException: Identifier 'transaction' has already been declared
C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\src\repositories\task\task.repository.ts:105
        const transaction = await allocation_model_1.default.sequelize.transaction();
              ^

SyntaxError: Identifier 'transaction' has already been declared
    at wrapSafe (node:internal/modules/cjs/loader:1469:18)
    at Module._compile (node:internal/modules/cjs/loader:1491:20)
    at Module.m._compile (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1618:23)
    at node:internal/modules/cjs/loader:1689:10
    at Object.require.extensions.<computed> [as .ts] (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1621:12)
    at Module.load (node:internal/modules/cjs/loader:1318:32)
    at Function._load (node:internal/modules/cjs/loader:1128:12)
    at TracingChannel.traceSync (node:diagnostics_channel:315:14)
    at wrapModuleLoad (node:internal/modules/cjs/loader:218:24)
    at Module.require (node:internal/modules/cjs/loader:1340:12)
2025-04-22 12:02:47 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 12:02:47 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 12:03:53 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 12:03:53 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 12:04:46 error: [GET] /api/tasks/getEmployeeProjectHours/1 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 12:04:47 error: [GET] /api/tasks/getEmployeeProjectHours/1 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 12:05:29 error: [GET] /api/tasks/getEmployeeProjectHours/1 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 12:05:29 error: [GET] /api/tasks/getEmployeeProjectHours/1 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 12:05:37 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 12:05:37 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 12:05:38 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 12:05:38 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 12:05:40 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 12:05:41 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 12:27:04 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 12:27:05 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 12:27:57 error: [GET] /api/tasks/getEmployeeProjectHours/1 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 12:27:58 error: [GET] /api/tasks/getEmployeeProjectHours/1 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 12:28:23 error: [GET] /api/tasks/getEmployeeProjectHours/1 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 12:28:23 error: [GET] /api/tasks/getEmployeeProjectHours/1 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 12:28:39 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 12:28:39 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 12:28:40 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 12:28:41 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 12:28:47 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 12:28:48 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 12:41:57 error: uncaughtException: ⨯ Unable to compile TypeScript:
[96msrc/repositories/task/task.repository.ts[0m:[93m133[0m:[93m41[0m - [91merror[0m[90m TS1135: [0mArgument expression expected.

[7m133[0m         await this.calculateUtilization(.employeeId);
[7m   [0m [91m                                        ~[0m

TSError: ⨯ Unable to compile TypeScript:
[96msrc/repositories/task/task.repository.ts[0m:[93m133[0m:[93m41[0m - [91merror[0m[90m TS1135: [0mArgument expression expected.

[7m133[0m         await this.calculateUtilization(.employeeId);
[7m   [0m [91m                                        ~[0m

    at createTSError (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:859:12)
    at reportTSError (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:863:19)
    at C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1379:34
    at Object.compile (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1458:13)
    at Module.m._compile (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1617:30)
    at node:internal/modules/cjs/loader:1689:10
    at Object.require.extensions.<computed> [as .ts] (C:\Users\Administrator\Desktop\Projects\eltek-timer-pay-backend\node_modules\ts-node\src\index.ts:1621:12)
    at Module.load (node:internal/modules/cjs/loader:1318:32)
    at Function._load (node:internal/modules/cjs/loader:1128:12)
    at TracingChannel.traceSync (node:diagnostics_channel:315:14)
2025-04-22 12:48:52 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 12:48:52 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 12:49:55 error: [GET] /api/tasks/getEmployeeProjectHours/1 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 12:49:56 error: [GET] /api/tasks/getEmployeeProjectHours/1 >> StatusCode:: 400, Message:: SequelizeDatabaseError: Unknown column 'hours' in 'field list'
2025-04-22 12:50:06 error: [GET] /api/projects/getEmployeeProjects/1 >> StatusCode:: 500, Message:: this.projectService.getProjectsByEmployee is not a function
2025-04-22 12:50:06 error: [GET] /api/projects/getEmployeeProjects/1 >> StatusCode:: 500, Message:: this.projectService.getProjectsByEmployee is not a function
2025-04-22 12:50:49 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 12:50:49 error: [GET] /api/employees/getNumberOfAssignedEmployees >> StatusCode:: 500, Message:: this.employeeService.getNumberOfAssignedEmployees is not a function
2025-04-22 12:50:50 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 12:50:50 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 12:50:55 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 12:50:55 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 12:51:57 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 12:51:58 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 12:53:50 error: [PUT] /api/tasks/updateTask >> StatusCode:: 500, Message:: Error updating task: Cannot add or update a child row: a foreign key constraint fails (`db_aa010d_eltek`.`tasks`, CONSTRAINT `tasks_ibfk_2` FOREIGN KEY (`allocationId`) REFERENCES `allocations` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE)
2025-04-22 12:56:41 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 12:56:42 error: [GET] /api/tasks/getProjectHoursSummary >> StatusCode:: 400, Message:: Error getting all projects hours
2025-04-22 12:57:07 error: [POST] /api/tasks/createTask >> StatusCode:: 500, Message:: Error creating task: notNull Violation: Task.phase cannot be null
2025-04-22 13:00:36 error: [PUT] /api/tasks/updateTask >> StatusCode:: 500, Message:: Error updating task: Task not found
2025-04-22 13:31:29 error: Unable to connect to the database: Table 'db_aa010d_eltek.employees' doesn't exist
